<test-run id="2" testcasecount="90" result="Passed" start-time="2023-03-16 13:28:36.189811" end-time="2023-03-16 13:28:41.307240" duration="5" total="90" passed="51" failed="39" inconclusive="0" skipped="0" asserts="0" clr-version="3.9.13 (main, Aug 25 2022, 23:51:50) [MSC v.1916 64 bit (AMD64)]" engine-version="3.6.2"><command-line>C:\ProgramData\Anaconda3\Scripts\pytest tests/</command-line><filter><test re="0">tests/</test></filter><test-suite id="tests/test_nafigator.py::TestNafigator_docx" name="tests/test_nafigator.py::TestNafigator_docx" fullname="tests/test_nafigator.py::TestNafigator_docx" methodname="" classname="" runstate="Runnable" type="Assembly" testcasecount="7" result="Passed" label="" start-time="2023-03-16 13:28:40.933212" end-time="2023-03-16 13:28:41.250237" duration="0.317025" asserts="0" total="7" passed="0" failed="7" warnings="0" inconclusive="0" skipped="0"><properties><property name="python_version" value="3.9.13 (main, Aug 25 2022, 23:51:50) [MSC v.1916 64 bit (AMD64)]" /></properties><test-case id="141" name="tests/test_nafigator.py::TestNafigator_docx::test_10_docx_multiwords" fullname="tests/test_nafigator.py::TestNafigator_docx::test_10_docx_multiwords" methodname="test_10_docx_multiwords" classname="TestNafigator_docx" runstate="Runnable" seed="1" result="Failed" label="" start-time="2023-03-16 13:28:40.933212" end-time="2023-03-16 13:28:40.970214" duration="0.037002" asserts="0"><properties><property name="python-version" value="3.9.13 (main, Aug 25 2022, 23:51:50) [MSC v.1916 64 bit (AMD64)]" /><property name="fspath" value="tests/test_nafigator.py" /></properties><environment framework-version="3.6.2" clr-version="3.9.13 (main, Aug 25 2022, 23:51:50) [MSC v.1916 64 bit (AMD64)]" os-version="10" platform="Windows" cwd="C:\Users\lsevereijns\Documents\nafigator" machine-name="AMD64" user="" user-domain="" culture="en_US" uiculture="en_US" os-architecture="64bit" /><failure><message><![CDATA[self = &lt;tests.test_nafigator.TestNafigator_docx testMethod=test_10_docx_multiwords&gt;

    def test_10_docx_multiwords(self):
&gt;       naf = NafDocument().open(join("tests", "tests", "example.docx.naf.xml"))

tests\test_nafigator.py:2225: 
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 

self = &lt;nafigator.nafdocument.NafDocument object at 0x000002049C7BB630&gt;
input = 'tests\\tests\\example.docx.naf.xml'

    def open(self, input: Union[str, bytes]):
        """Function to open a NafDocument
    
        Args:
            input: the location of the NafDocument to be opened or a bytes object containing the file content
    
        Returns:
            NafDocument: the NAF document that is opened
    
        """
        if isinstance(input, str):
&gt;           with open(input, "r", encoding="utf-8") as f:
E           FileNotFoundError: [Errno 2] No such file or directory: 'tests\\tests\\example.docx.naf.xml'

nafigator\nafdocument.py:107: FileNotFoundError]]></message><stack-trace><![CDATA[C:\Users\lsevereijns\Documents\nafigator\nafigator\nafdocument.py:107: FileNotFoundError: [Errno 2] No such file or directory: 'tests\\tests\\example.docx.naf.xml']]></stack-trace></failure><reason><message><![CDATA[]]></message></reason><output><![CDATA[]]></output></test-case><test-case id="142" name="tests/test_nafigator.py::TestNafigator_docx::test_11_docx_raw" fullname="tests/test_nafigator.py::TestNafigator_docx::test_11_docx_raw" methodname="test_11_docx_raw" classname="TestNafigator_docx" runstate="Runnable" seed="1" result="Failed" label="" start-time="2023-03-16 13:28:40.970214" end-time="2023-03-16 13:28:41.007217" duration="0.037003" asserts="0"><properties><property name="python-version" value="3.9.13 (main, Aug 25 2022, 23:51:50) [MSC v.1916 64 bit (AMD64)]" /><property name="fspath" value="tests/test_nafigator.py" /></properties><environment framework-version="3.6.2" clr-version="3.9.13 (main, Aug 25 2022, 23:51:50) [MSC v.1916 64 bit (AMD64)]" os-version="10" platform="Windows" cwd="C:\Users\lsevereijns\Documents\nafigator" machine-name="AMD64" user="" user-domain="" culture="en_US" uiculture="en_US" os-architecture="64bit" /><failure><message><![CDATA[self = &lt;tests.test_nafigator.TestNafigator_docx testMethod=test_11_docx_raw&gt;

    def test_11_docx_raw(self):
&gt;       naf = NafDocument().open(join("tests", "tests", "example.docx.naf.xml"))

tests\test_nafigator.py:2244: 
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 

self = &lt;nafigator.nafdocument.NafDocument object at 0x000002049C9F1680&gt;
input = 'tests\\tests\\example.docx.naf.xml'

    def open(self, input: Union[str, bytes]):
        """Function to open a NafDocument
    
        Args:
            input: the location of the NafDocument to be opened or a bytes object containing the file content
    
        Returns:
            NafDocument: the NAF document that is opened
    
        """
        if isinstance(input, str):
&gt;           with open(input, "r", encoding="utf-8") as f:
E           FileNotFoundError: [Errno 2] No such file or directory: 'tests\\tests\\example.docx.naf.xml'

nafigator\nafdocument.py:107: FileNotFoundError]]></message><stack-trace><![CDATA[C:\Users\lsevereijns\Documents\nafigator\nafigator\nafdocument.py:107: FileNotFoundError: [Errno 2] No such file or directory: 'tests\\tests\\example.docx.naf.xml']]></stack-trace></failure><reason><message><![CDATA[]]></message></reason><output><![CDATA[]]></output></test-case><test-case id="143" name="tests/test_nafigator.py::TestNafigator_docx::test_1_docx_generate_naf" fullname="tests/test_nafigator.py::TestNafigator_docx::test_1_docx_generate_naf" methodname="test_1_docx_generate_naf" classname="TestNafigator_docx" runstate="Runnable" seed="1" result="Failed" label="" start-time="2023-03-16 13:28:41.007217" end-time="2023-03-16 13:28:41.025218" duration="0.018001" asserts="0"><properties><property name="python-version" value="3.9.13 (main, Aug 25 2022, 23:51:50) [MSC v.1916 64 bit (AMD64)]" /><property name="fspath" value="tests/test_nafigator.py" /></properties><environment framework-version="3.6.2" clr-version="3.9.13 (main, Aug 25 2022, 23:51:50) [MSC v.1916 64 bit (AMD64)]" os-version="10" platform="Windows" cwd="C:\Users\lsevereijns\Documents\nafigator" machine-name="AMD64" user="" user-domain="" culture="en_US" uiculture="en_US" os-architecture="64bit" /><failure><message><![CDATA[self = &lt;tests.test_nafigator.TestNafigator_docx testMethod=test_1_docx_generate_naf&gt;

    def test_1_docx_generate_naf(self):
        """ """
        tree = parse2naf.generate_naf(
            input=join("tests", "tests", "example.docx"),
            engine="stanza",
            language="en",
            naf_version="v3.1",
            dtd_validation=False,
            params={},
            nlp=None,
        )
&gt;       assert tree.write(join("tests", "tests", "example.docx.naf.xml")) == None
E       AttributeError: 'NoneType' object has no attribute 'write'

tests\test_nafigator.py:1260: AttributeError]]></message><stack-trace><![CDATA[C:\Users\lsevereijns\Documents\nafigator\tests\test_nafigator.py:1260: AttributeError: 'NoneType' object has no attribute 'write']]></stack-trace></failure><reason><message><![CDATA[&#x1b;[31m&#x1b;[1mERROR   &#x1b;[0m root:parse2naf.py:57 no or non-existing input specified]]></message></reason><output><![CDATA[&#x1b;[31m&#x1b;[1mERROR   &#x1b;[0m root:parse2naf.py:57 no or non-existing input specified]]></output></test-case><test-case id="144" name="tests/test_nafigator.py::TestNafigator_docx::test_2_docx_header_filedesc" fullname="tests/test_nafigator.py::TestNafigator_docx::test_2_docx_header_filedesc" methodname="test_2_docx_header_filedesc" classname="TestNafigator_docx" runstate="Runnable" seed="1" result="Failed" label="" start-time="2023-03-16 13:28:41.026219" end-time="2023-03-16 13:28:41.063221" duration="0.037002" asserts="0"><properties><property name="python-version" value="3.9.13 (main, Aug 25 2022, 23:51:50) [MSC v.1916 64 bit (AMD64)]" /><property name="fspath" value="tests/test_nafigator.py" /></properties><environment framework-version="3.6.2" clr-version="3.9.13 (main, Aug 25 2022, 23:51:50) [MSC v.1916 64 bit (AMD64)]" os-version="10" platform="Windows" cwd="C:\Users\lsevereijns\Documents\nafigator" machine-name="AMD64" user="" user-domain="" culture="en_US" uiculture="en_US" os-architecture="64bit" /><failure><message><![CDATA[self = &lt;tests.test_nafigator.TestNafigator_docx testMethod=test_2_docx_header_filedesc&gt;

    def test_2_docx_header_filedesc(self):
        """ """
&gt;       naf = NafDocument().open(
            "tests" + os.sep + "tests" + os.sep + "example.docx.naf.xml"
        )

tests\test_nafigator.py:1264: 
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 

self = &lt;nafigator.nafdocument.NafDocument object at 0x000002049CA34CC0&gt;
input = 'tests\\tests\\example.docx.naf.xml'

    def open(self, input: Union[str, bytes]):
        """Function to open a NafDocument
    
        Args:
            input: the location of the NafDocument to be opened or a bytes object containing the file content
    
        Returns:
            NafDocument: the NAF document that is opened
    
        """
        if isinstance(input, str):
&gt;           with open(input, "r", encoding="utf-8") as f:
E           FileNotFoundError: [Errno 2] No such file or directory: 'tests\\tests\\example.docx.naf.xml'

nafigator\nafdocument.py:107: FileNotFoundError]]></message><stack-trace><![CDATA[C:\Users\lsevereijns\Documents\nafigator\nafigator\nafdocument.py:107: FileNotFoundError: [Errno 2] No such file or directory: 'tests\\tests\\example.docx.naf.xml']]></stack-trace></failure><reason><message><![CDATA[]]></message></reason><output><![CDATA[]]></output></test-case><test-case id="145" name="tests/test_nafigator.py::TestNafigator_docx::test_3_docx_header_public" fullname="tests/test_nafigator.py::TestNafigator_docx::test_3_docx_header_public" methodname="test_3_docx_header_public" classname="TestNafigator_docx" runstate="Runnable" seed="1" result="Failed" label="" start-time="2023-03-16 13:28:41.063221" end-time="2023-03-16 13:28:41.099228" duration="0.036007" asserts="0"><properties><property name="python-version" value="3.9.13 (main, Aug 25 2022, 23:51:50) [MSC v.1916 64 bit (AMD64)]" /><property name="fspath" value="tests/test_nafigator.py" /></properties><environment framework-version="3.6.2" clr-version="3.9.13 (main, Aug 25 2022, 23:51:50) [MSC v.1916 64 bit (AMD64)]" os-version="10" platform="Windows" cwd="C:\Users\lsevereijns\Documents\nafigator" machine-name="AMD64" user="" user-domain="" culture="en_US" uiculture="en_US" os-architecture="64bit" /><failure><message><![CDATA[self = &lt;tests.test_nafigator.TestNafigator_docx testMethod=test_3_docx_header_public&gt;

    def test_3_docx_header_public(self):
        """ """
&gt;       naf = NafDocument().open(
            "tests" + os.sep + "tests" + os.sep + "example.docx.naf.xml"
        )

tests\test_nafigator.py:1277: 
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 

self = &lt;nafigator.nafdocument.NafDocument object at 0x000002049CA200E0&gt;
input = 'tests\\tests\\example.docx.naf.xml'

    def open(self, input: Union[str, bytes]):
        """Function to open a NafDocument
    
        Args:
            input: the location of the NafDocument to be opened or a bytes object containing the file content
    
        Returns:
            NafDocument: the NAF document that is opened
    
        """
        if isinstance(input, str):
&gt;           with open(input, "r", encoding="utf-8") as f:
E           FileNotFoundError: [Errno 2] No such file or directory: 'tests\\tests\\example.docx.naf.xml'

nafigator\nafdocument.py:107: FileNotFoundError]]></message><stack-trace><![CDATA[C:\Users\lsevereijns\Documents\nafigator\nafigator\nafdocument.py:107: FileNotFoundError: [Errno 2] No such file or directory: 'tests\\tests\\example.docx.naf.xml']]></stack-trace></failure><reason><message><![CDATA[]]></message></reason><output><![CDATA[]]></output></test-case><test-case id="146" name="tests/test_nafigator.py::TestNafigator_docx::test_6_docx_entities" fullname="tests/test_nafigator.py::TestNafigator_docx::test_6_docx_entities" methodname="test_6_docx_entities" classname="TestNafigator_docx" runstate="Runnable" seed="1" result="Failed" label="" start-time="2023-03-16 13:28:41.100225" end-time="2023-03-16 13:28:41.212233" duration="0.112008" asserts="0"><properties><property name="python-version" value="3.9.13 (main, Aug 25 2022, 23:51:50) [MSC v.1916 64 bit (AMD64)]" /><property name="fspath" value="tests/test_nafigator.py" /></properties><environment framework-version="3.6.2" clr-version="3.9.13 (main, Aug 25 2022, 23:51:50) [MSC v.1916 64 bit (AMD64)]" os-version="10" platform="Windows" cwd="C:\Users\lsevereijns\Documents\nafigator" machine-name="AMD64" user="" user-domain="" culture="en_US" uiculture="en_US" os-architecture="64bit" /><failure><message><![CDATA[self = &lt;tests.test_nafigator.TestNafigator_docx testMethod=test_6_docx_entities&gt;

    def test_6_docx_entities(self):
&gt;       naf = NafDocument().open(join("tests", "tests", "example.docx.naf.xml"))

tests\test_nafigator.py:1298: 
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 

self = &lt;nafigator.nafdocument.NafDocument object at 0x000002049CA205E0&gt;
input = 'tests\\tests\\example.docx.naf.xml'

    def open(self, input: Union[str, bytes]):
        """Function to open a NafDocument
    
        Args:
            input: the location of the NafDocument to be opened or a bytes object containing the file content
    
        Returns:
            NafDocument: the NAF document that is opened
    
        """
        if isinstance(input, str):
&gt;           with open(input, "r", encoding="utf-8") as f:
E           FileNotFoundError: [Errno 2] No such file or directory: 'tests\\tests\\example.docx.naf.xml'

nafigator\nafdocument.py:107: FileNotFoundError]]></message><stack-trace><![CDATA[C:\Users\lsevereijns\Documents\nafigator\nafigator\nafdocument.py:107: FileNotFoundError: [Errno 2] No such file or directory: 'tests\\tests\\example.docx.naf.xml']]></stack-trace></failure><reason><message><![CDATA[]]></message></reason><output><![CDATA[]]></output></test-case><test-case id="147" name="tests/test_nafigator.py::TestNafigator_docx::test_7_docx_text" fullname="tests/test_nafigator.py::TestNafigator_docx::test_7_docx_text" methodname="test_7_docx_text" classname="TestNafigator_docx" runstate="Runnable" seed="1" result="Failed" label="" start-time="2023-03-16 13:28:41.213238" end-time="2023-03-16 13:28:41.250237" duration="0.036999" asserts="0"><properties><property name="python-version" value="3.9.13 (main, Aug 25 2022, 23:51:50) [MSC v.1916 64 bit (AMD64)]" /><property name="fspath" value="tests/test_nafigator.py" /></properties><environment framework-version="3.6.2" clr-version="3.9.13 (main, Aug 25 2022, 23:51:50) [MSC v.1916 64 bit (AMD64)]" os-version="10" platform="Windows" cwd="C:\Users\lsevereijns\Documents\nafigator" machine-name="AMD64" user="" user-domain="" culture="en_US" uiculture="en_US" os-architecture="64bit" /><failure><message><![CDATA[self = &lt;tests.test_nafigator.TestNafigator_docx testMethod=test_7_docx_text&gt;

    def test_7_docx_text(self):
&gt;       naf = NafDocument().open(join("tests", "tests", "example.docx.naf.xml"))

tests\test_nafigator.py:1315: 
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 

self = &lt;nafigator.nafdocument.NafDocument object at 0x000002049C7BB450&gt;
input = 'tests\\tests\\example.docx.naf.xml'

    def open(self, input: Union[str, bytes]):
        """Function to open a NafDocument
    
        Args:
            input: the location of the NafDocument to be opened or a bytes object containing the file content
    
        Returns:
            NafDocument: the NAF document that is opened
    
        """
        if isinstance(input, str):
&gt;           with open(input, "r", encoding="utf-8") as f:
E           FileNotFoundError: [Errno 2] No such file or directory: 'tests\\tests\\example.docx.naf.xml'

nafigator\nafdocument.py:107: FileNotFoundError]]></message><stack-trace><![CDATA[C:\Users\lsevereijns\Documents\nafigator\nafigator\nafdocument.py:107: FileNotFoundError: [Errno 2] No such file or directory: 'tests\\tests\\example.docx.naf.xml']]></stack-trace></failure><reason><message><![CDATA[]]></message></reason><output><![CDATA[]]></output></test-case><environment framework-version="3.6.2" clr-version="3.9.13 (main, Aug 25 2022, 23:51:50) [MSC v.1916 64 bit (AMD64)]" os-version="10" platform="Windows" cwd="C:\Users\lsevereijns\Documents\nafigator" machine-name="AMD64" user="" user-domain="" culture="en_US" uiculture="en_US" os-architecture="64bit" /></test-suite><test-suite id="tests/test_utils.py::TestUtils" name="tests/test_utils.py::TestUtils" fullname="tests/test_utils.py::TestUtils" methodname="" classname="" runstate="Runnable" type="Assembly" testcasecount="23" result="Passed" label="The basic class that inherits unittest.TestCase" start-time="2023-03-16 13:28:41.275238" end-time="2023-03-16 13:28:41.307240" duration="0.032002" asserts="0" total="23" passed="23" failed="0" warnings="0" inconclusive="0" skipped="0"><properties><property name="python_version" value="3.9.13 (main, Aug 25 2022, 23:51:50) [MSC v.1916 64 bit (AMD64)]" /></properties><test-case id="167" name="tests/test_utils.py::TestUtils::test_dataframe2naf" fullname="tests/test_utils.py::TestUtils::test_dataframe2naf" methodname="test_dataframe2naf" classname="TestUtils" runstate="Runnable" seed="1" result="Passed" label="This function evaluates metadata and reruns files with naf error.&#10;        Input:&#10;            df_meta: the dataframe containing the meta data for the NAF files.&#10;            overwrite_existing_naf: if True then existing NAF files are overwritten (default = False)&#10;            rerun_files_with_naf_errors: if True then documents that produced NAF errors are run again (default = False)&#10;            engine: name of the NLP processor to be used (default = None)&#10;            naf_version: NAF version to be used&#10;            dtd_validation: perform validation of each NAF file (default = False)&#10;            params: additional parameters for NAF conversion&#10;        Level: 0&#10;        Scenarios:&#10;            missing dc:language&#10;            missing dc:source&#10;            rerun_files_with_naf_errors True&#10;            overwrite_existing_naf True" start-time="2023-03-16 13:28:41.275238" end-time="2023-03-16 13:28:41.276241" duration="0.001003" asserts="0"><properties><property name="python-version" value="3.9.13 (main, Aug 25 2022, 23:51:50) [MSC v.1916 64 bit (AMD64)]" /><property name="fspath" value="tests/test_utils.py" /></properties><environment framework-version="3.6.2" clr-version="3.9.13 (main, Aug 25 2022, 23:51:50) [MSC v.1916 64 bit (AMD64)]" os-version="10" platform="Windows" cwd="C:\Users\lsevereijns\Documents\nafigator" machine-name="AMD64" user="" user-domain="" culture="en_US" uiculture="en_US" os-architecture="64bit" /><failure><message><![CDATA[]]></message><stack-trace><![CDATA[None]]></stack-trace></failure><reason><message><![CDATA[]]></message></reason><output><![CDATA[]]></output></test-case><test-case id="168" name="tests/test_utils.py::TestUtils::test_evaluate_sentence" fullname="tests/test_utils.py::TestUtils::test_evaluate_sentence" methodname="test_evaluate_sentence" classname="TestUtils" runstate="Runnable" seed="1" result="Passed" label="OUTDATED - CHECK TO REMOVE&#10;        This function evaluates a sentence on occurrence of mandatory terms and non occurrence of&#10;        term to avoid&#10;        Input:&#10;        Level: &#10;        Scenarios:" start-time="2023-03-16 13:28:41.277241" end-time="2023-03-16 13:28:41.277241" duration="0.0" asserts="0"><properties><property name="python-version" value="3.9.13 (main, Aug 25 2022, 23:51:50) [MSC v.1916 64 bit (AMD64)]" /><property name="fspath" value="tests/test_utils.py" /></properties><environment framework-version="3.6.2" clr-version="3.9.13 (main, Aug 25 2022, 23:51:50) [MSC v.1916 64 bit (AMD64)]" os-version="10" platform="Windows" cwd="C:\Users\lsevereijns\Documents\nafigator" machine-name="AMD64" user="" user-domain="" culture="en_US" uiculture="en_US" os-architecture="64bit" /><failure><message><![CDATA[]]></message><stack-trace><![CDATA[None]]></stack-trace></failure><reason><message><![CDATA[]]></message></reason><output><![CDATA[]]></output></test-case><test-case id="169" name="tests/test_utils.py::TestUtils::test_get_context_rows" fullname="tests/test_utils.py::TestUtils::test_get_context_rows" methodname="test_get_context_rows" classname="TestUtils" runstate="Runnable" seed="1" result="Passed" label="This function retrieves the line where word has been found with option to also retreive sentences/paragraphs&#10;            before and after&#10;        Input:&#10;            ref_text: a sentence or paragraph from the sentences or paragraphs layer as a dictionary to retrieve extra&#10;                context for&#10;            naf: a NafDocument.sentences or NafDocument.paragaphs (can be rewritten with search_level as extra input)&#10;            context_range: amount of context lines around ref_text&#10;        Level: 0&#10;        Scenarios:&#10;            context range = 0&#10;            context range = 2&#10;            sentence&#10;            paragraph" start-time="2023-03-16 13:28:41.278238" end-time="2023-03-16 13:28:41.279241" duration="0.001003" asserts="0"><properties><property name="python-version" value="3.9.13 (main, Aug 25 2022, 23:51:50) [MSC v.1916 64 bit (AMD64)]" /><property name="fspath" value="tests/test_utils.py" /></properties><environment framework-version="3.6.2" clr-version="3.9.13 (main, Aug 25 2022, 23:51:50) [MSC v.1916 64 bit (AMD64)]" os-version="10" platform="Windows" cwd="C:\Users\lsevereijns\Documents\nafigator" machine-name="AMD64" user="" user-domain="" culture="en_US" uiculture="en_US" os-architecture="64bit" /><failure><message><![CDATA[]]></message><stack-trace><![CDATA[None]]></stack-trace></failure><reason><message><![CDATA[]]></message></reason><output><![CDATA[]]></output></test-case><test-case id="170" name="tests/test_utils.py::TestUtils::test_get_textlines" fullname="tests/test_utils.py::TestUtils::test_get_textlines" methodname="test_get_textlines" classname="TestUtils" runstate="Runnable" seed="1" result="Passed" label="test already written above. Move below to follow seem order as in utils.py&#10;        This function&#10;        Input:&#10;        Level:&#10;        Scenarios:" start-time="2023-03-16 13:28:41.279241" end-time="2023-03-16 13:28:41.280238" duration="0.000997" asserts="0"><properties><property name="python-version" value="3.9.13 (main, Aug 25 2022, 23:51:50) [MSC v.1916 64 bit (AMD64)]" /><property name="fspath" value="tests/test_utils.py" /></properties><environment framework-version="3.6.2" clr-version="3.9.13 (main, Aug 25 2022, 23:51:50) [MSC v.1916 64 bit (AMD64)]" os-version="10" platform="Windows" cwd="C:\Users\lsevereijns\Documents\nafigator" machine-name="AMD64" user="" user-domain="" culture="en_US" uiculture="en_US" os-architecture="64bit" /><failure><message><![CDATA[]]></message><stack-trace><![CDATA[None]]></stack-trace></failure><reason><message><![CDATA[]]></message></reason><output><![CDATA[]]></output></test-case><test-case id="171" name="tests/test_utils.py::TestUtils::test_get_textlines_0_sentence_in_fist_textline" fullname="tests/test_utils.py::TestUtils::test_get_textlines_0_sentence_in_fist_textline" methodname="test_get_textlines_0_sentence_in_fist_textline" classname="TestUtils" runstate="Runnable" seed="1" result="Passed" label="" start-time="2023-03-16 13:28:41.280238" end-time="2023-03-16 13:28:41.281240" duration="0.001002" asserts="0"><properties><property name="python-version" value="3.9.13 (main, Aug 25 2022, 23:51:50) [MSC v.1916 64 bit (AMD64)]" /><property name="fspath" value="tests/test_utils.py" /></properties><environment framework-version="3.6.2" clr-version="3.9.13 (main, Aug 25 2022, 23:51:50) [MSC v.1916 64 bit (AMD64)]" os-version="10" platform="Windows" cwd="C:\Users\lsevereijns\Documents\nafigator" machine-name="AMD64" user="" user-domain="" culture="en_US" uiculture="en_US" os-architecture="64bit" /><failure><message><![CDATA[]]></message><stack-trace><![CDATA[None]]></stack-trace></failure><reason><message><![CDATA[]]></message></reason><output><![CDATA[]]></output></test-case><test-case id="172" name="tests/test_utils.py::TestUtils::test_get_textlines_1_sentence_in_one_textline" fullname="tests/test_utils.py::TestUtils::test_get_textlines_1_sentence_in_one_textline" methodname="test_get_textlines_1_sentence_in_one_textline" classname="TestUtils" runstate="Runnable" seed="1" result="Passed" label="" start-time="2023-03-16 13:28:41.282243" end-time="2023-03-16 13:28:41.283240" duration="0.000997" asserts="0"><properties><property name="python-version" value="3.9.13 (main, Aug 25 2022, 23:51:50) [MSC v.1916 64 bit (AMD64)]" /><property name="fspath" value="tests/test_utils.py" /></properties><environment framework-version="3.6.2" clr-version="3.9.13 (main, Aug 25 2022, 23:51:50) [MSC v.1916 64 bit (AMD64)]" os-version="10" platform="Windows" cwd="C:\Users\lsevereijns\Documents\nafigator" machine-name="AMD64" user="" user-domain="" culture="en_US" uiculture="en_US" os-architecture="64bit" /><failure><message><![CDATA[]]></message><stack-trace><![CDATA[None]]></stack-trace></failure><reason><message><![CDATA[]]></message></reason><output><![CDATA[]]></output></test-case><test-case id="173" name="tests/test_utils.py::TestUtils::test_get_textlines_2_sentence_split_over_two_lines" fullname="tests/test_utils.py::TestUtils::test_get_textlines_2_sentence_split_over_two_lines" methodname="test_get_textlines_2_sentence_split_over_two_lines" classname="TestUtils" runstate="Runnable" seed="1" result="Passed" label="" start-time="2023-03-16 13:28:41.283240" end-time="2023-03-16 13:28:41.284241" duration="0.001001" asserts="0"><properties><property name="python-version" value="3.9.13 (main, Aug 25 2022, 23:51:50) [MSC v.1916 64 bit (AMD64)]" /><property name="fspath" value="tests/test_utils.py" /></properties><environment framework-version="3.6.2" clr-version="3.9.13 (main, Aug 25 2022, 23:51:50) [MSC v.1916 64 bit (AMD64)]" os-version="10" platform="Windows" cwd="C:\Users\lsevereijns\Documents\nafigator" machine-name="AMD64" user="" user-domain="" culture="en_US" uiculture="en_US" os-architecture="64bit" /><failure><message><![CDATA[]]></message><stack-trace><![CDATA[None]]></stack-trace></failure><reason><message><![CDATA[]]></message></reason><output><![CDATA[]]></output></test-case><test-case id="174" name="tests/test_utils.py::TestUtils::test_get_textlines_3_sentence_in_last_textlines" fullname="tests/test_utils.py::TestUtils::test_get_textlines_3_sentence_in_last_textlines" methodname="test_get_textlines_3_sentence_in_last_textlines" classname="TestUtils" runstate="Runnable" seed="1" result="Passed" label="" start-time="2023-03-16 13:28:41.285239" end-time="2023-03-16 13:28:41.285239" duration="0.0" asserts="0"><properties><property name="python-version" value="3.9.13 (main, Aug 25 2022, 23:51:50) [MSC v.1916 64 bit (AMD64)]" /><property name="fspath" value="tests/test_utils.py" /></properties><environment framework-version="3.6.2" clr-version="3.9.13 (main, Aug 25 2022, 23:51:50) [MSC v.1916 64 bit (AMD64)]" os-version="10" platform="Windows" cwd="C:\Users\lsevereijns\Documents\nafigator" machine-name="AMD64" user="" user-domain="" culture="en_US" uiculture="en_US" os-architecture="64bit" /><failure><message><![CDATA[]]></message><stack-trace><![CDATA[None]]></stack-trace></failure><reason><message><![CDATA[]]></message></reason><output><![CDATA[]]></output></test-case><test-case id="175" name="tests/test_utils.py::TestUtils::test_glue_sentences_separated_by_colons" fullname="tests/test_utils.py::TestUtils::test_glue_sentences_separated_by_colons" methodname="test_glue_sentences_separated_by_colons" classname="TestUtils" runstate="Runnable" seed="1" result="Passed" label="NOT BEING USED IN NAFIGATOR - CHECK USAGE OTHER PACKAGES&#10;        This function glues sentences that are separated by colons&#10;        Input:&#10;            doc: the NafDocument&#10;            language: language used for lemmatization&#10;            nlp: dictionary of nlp processors    &#10;        Level: 0&#10;        Scenarios:&#10;            NafDocument with colons" start-time="2023-03-16 13:28:41.286241" end-time="2023-03-16 13:28:41.287240" duration="0.000999" asserts="0"><properties><property name="python-version" value="3.9.13 (main, Aug 25 2022, 23:51:50) [MSC v.1916 64 bit (AMD64)]" /><property name="fspath" value="tests/test_utils.py" /></properties><environment framework-version="3.6.2" clr-version="3.9.13 (main, Aug 25 2022, 23:51:50) [MSC v.1916 64 bit (AMD64)]" os-version="10" platform="Windows" cwd="C:\Users\lsevereijns\Documents\nafigator" machine-name="AMD64" user="" user-domain="" culture="en_US" uiculture="en_US" os-architecture="64bit" /><failure><message><![CDATA[]]></message><stack-trace><![CDATA[None]]></stack-trace></failure><reason><message><![CDATA[]]></message></reason><output><![CDATA[]]></output></test-case><test-case id="176" name="tests/test_utils.py::TestUtils::test_glue_terms_separated_by_hard_hyphens" fullname="tests/test_utils.py::TestUtils::test_glue_terms_separated_by_hard_hyphens" methodname="test_glue_terms_separated_by_hard_hyphens" classname="TestUtils" runstate="Runnable" seed="1" result="Passed" label="NOT BEING USED IN NAFIGATOR - CHECK USAGE OTHER PACKAGES&#10;        This function glues terms that are separated by hard hyphens&#10;        Input:&#10;            doc: the NafDocument&#10;            language: language used for lemmatization&#10;            nlp: dictionary of nlp processors&#10;        Level: 0&#10;        Scenarios:&#10;            NafDocument with hard hyphens" start-time="2023-03-16 13:28:41.288239" end-time="2023-03-16 13:28:41.289240" duration="0.001001" asserts="0"><properties><property name="python-version" value="3.9.13 (main, Aug 25 2022, 23:51:50) [MSC v.1916 64 bit (AMD64)]" /><property name="fspath" value="tests/test_utils.py" /></properties><environment framework-version="3.6.2" clr-version="3.9.13 (main, Aug 25 2022, 23:51:50) [MSC v.1916 64 bit (AMD64)]" os-version="10" platform="Windows" cwd="C:\Users\lsevereijns\Documents\nafigator" machine-name="AMD64" user="" user-domain="" culture="en_US" uiculture="en_US" os-architecture="64bit" /><failure><message><![CDATA[]]></message><stack-trace><![CDATA[None]]></stack-trace></failure><reason><message><![CDATA[]]></message></reason><output><![CDATA[]]></output></test-case><test-case id="177" name="tests/test_utils.py::TestUtils::test_glue_terms_separated_by_soft_hyphens" fullname="tests/test_utils.py::TestUtils::test_glue_terms_separated_by_soft_hyphens" methodname="test_glue_terms_separated_by_soft_hyphens" classname="TestUtils" runstate="Runnable" seed="1" result="Passed" label="NOT BEING USED IN NAFIGATOR - CHECK USAGE OTHER PACKAGES&#10;        This function glues terms that are separated by soft hyphens&#10;        Input:&#10;            doc: the NafDocument&#10;            language: language used for lemmatization&#10;            nlp: dictionary of nlp processors&#10;        Level: 0&#10;        Scenarios:&#10;            NafDocument with soft hyphens" start-time="2023-03-16 13:28:41.289240" end-time="2023-03-16 13:28:41.290238" duration="0.000998" asserts="0"><properties><property name="python-version" value="3.9.13 (main, Aug 25 2022, 23:51:50) [MSC v.1916 64 bit (AMD64)]" /><property name="fspath" value="tests/test_utils.py" /></properties><environment framework-version="3.6.2" clr-version="3.9.13 (main, Aug 25 2022, 23:51:50) [MSC v.1916 64 bit (AMD64)]" os-version="10" platform="Windows" cwd="C:\Users\lsevereijns\Documents\nafigator" machine-name="AMD64" user="" user-domain="" culture="en_US" uiculture="en_US" os-architecture="64bit" /><failure><message><![CDATA[]]></message><stack-trace><![CDATA[None]]></stack-trace></failure><reason><message><![CDATA[]]></message></reason><output><![CDATA[]]></output></test-case><test-case id="178" name="tests/test_utils.py::TestUtils::test_lemmatize" fullname="tests/test_utils.py::TestUtils::test_lemmatize" methodname="test_lemmatize" classname="TestUtils" runstate="Runnable" seed="1" result="Passed" label="OUTDATED - CHECK TO REMOVE&#10;        This function lemmatizes text in onject&#10;        Input:&#10;            o: the object with text to be lemmatized&#10;            language: language used for lemmatization&#10;            nlp: dictionary of nlp processors&#10;        Level: 0&#10;        Scenarios:&#10;            string&#10;            list&#10;            dict&#10;            series&#10;            dataframe" start-time="2023-03-16 13:28:41.290238" end-time="2023-03-16 13:28:41.291239" duration="0.001001" asserts="0"><properties><property name="python-version" value="3.9.13 (main, Aug 25 2022, 23:51:50) [MSC v.1916 64 bit (AMD64)]" /><property name="fspath" value="tests/test_utils.py" /></properties><environment framework-version="3.6.2" clr-version="3.9.13 (main, Aug 25 2022, 23:51:50) [MSC v.1916 64 bit (AMD64)]" os-version="10" platform="Windows" cwd="C:\Users\lsevereijns\Documents\nafigator" machine-name="AMD64" user="" user-domain="" culture="en_US" uiculture="en_US" os-architecture="64bit" /><failure><message><![CDATA[]]></message><stack-trace><![CDATA[None]]></stack-trace></failure><reason><message><![CDATA[]]></message></reason><output><![CDATA[]]></output></test-case><test-case id="179" name="tests/test_utils.py::TestUtils::test_lemmatize_sentence" fullname="tests/test_utils.py::TestUtils::test_lemmatize_sentence" methodname="test_lemmatize_sentence" classname="TestUtils" runstate="Runnable" seed="1" result="Passed" label="OUTDATED - CHECK TO REMOVE&#10;        This function lemmatizes a naf sentence&#10;        Input:&#10;            sentence: dict of sentence (naf)&#10;            terms: list of terms dict (naf)&#10;        Level: 0&#10;        Scenarios:&#10;            sentence to be lemmatized" start-time="2023-03-16 13:28:41.292240" end-time="2023-03-16 13:28:41.293245" duration="0.001005" asserts="0"><properties><property name="python-version" value="3.9.13 (main, Aug 25 2022, 23:51:50) [MSC v.1916 64 bit (AMD64)]" /><property name="fspath" value="tests/test_utils.py" /></properties><environment framework-version="3.6.2" clr-version="3.9.13 (main, Aug 25 2022, 23:51:50) [MSC v.1916 64 bit (AMD64)]" os-version="10" platform="Windows" cwd="C:\Users\lsevereijns\Documents\nafigator" machine-name="AMD64" user="" user-domain="" culture="en_US" uiculture="en_US" os-architecture="64bit" /><failure><message><![CDATA[]]></message><stack-trace><![CDATA[None]]></stack-trace></failure><reason><message><![CDATA[]]></message></reason><output><![CDATA[]]></output></test-case><test-case id="180" name="tests/test_utils.py::TestUtils::test_load_dtd" fullname="tests/test_utils.py::TestUtils::test_load_dtd" methodname="test_load_dtd" classname="TestUtils" runstate="Runnable" seed="1" result="Passed" label="This function loads dtd&#10;        Input:&#10;            dtd_url: the location of the dtd file&#10;        Level: 0&#10;        Scenarios:&#10;            check if dtd has been loaded" start-time="2023-03-16 13:28:41.294240" end-time="2023-03-16 13:28:41.295241" duration="0.001001" asserts="0"><properties><property name="python-version" value="3.9.13 (main, Aug 25 2022, 23:51:50) [MSC v.1916 64 bit (AMD64)]" /><property name="fspath" value="tests/test_utils.py" /></properties><environment framework-version="3.6.2" clr-version="3.9.13 (main, Aug 25 2022, 23:51:50) [MSC v.1916 64 bit (AMD64)]" os-version="10" platform="Windows" cwd="C:\Users\lsevereijns\Documents\nafigator" machine-name="AMD64" user="" user-domain="" culture="en_US" uiculture="en_US" os-architecture="64bit" /><failure><message><![CDATA[]]></message><stack-trace><![CDATA[None]]></stack-trace></failure><reason><message><![CDATA[]]></message></reason><output><![CDATA[]]></output></test-case><test-case id="181" name="tests/test_utils.py::TestUtils::test_lowercase" fullname="tests/test_utils.py::TestUtils::test_lowercase" methodname="test_lowercase" classname="TestUtils" runstate="Runnable" seed="1" result="Passed" label="OUTDATED - CHECK TO REMOVE&#10;        This function&#10;        Input:&#10;        Level:&#10;        Scenarios:" start-time="2023-03-16 13:28:41.295241" end-time="2023-03-16 13:28:41.297241" duration="0.002" asserts="0"><properties><property name="python-version" value="3.9.13 (main, Aug 25 2022, 23:51:50) [MSC v.1916 64 bit (AMD64)]" /><property name="fspath" value="tests/test_utils.py" /></properties><environment framework-version="3.6.2" clr-version="3.9.13 (main, Aug 25 2022, 23:51:50) [MSC v.1916 64 bit (AMD64)]" os-version="10" platform="Windows" cwd="C:\Users\lsevereijns\Documents\nafigator" machine-name="AMD64" user="" user-domain="" culture="en_US" uiculture="en_US" os-architecture="64bit" /><failure><message><![CDATA[]]></message><stack-trace><![CDATA[None]]></stack-trace></failure><reason><message><![CDATA[]]></message></reason><output><![CDATA[]]></output></test-case><test-case id="182" name="tests/test_utils.py::TestUtils::test_normalize_token_orth" fullname="tests/test_utils.py::TestUtils::test_normalize_token_orth" methodname="test_normalize_token_orth" classname="TestUtils" runstate="Runnable" seed="1" result="Passed" label="This function normalizes the token text&#10;        Input:&#10;            orth: the token text to be normalized&#10;        Level: 1&#10;        Scenarios:&#10;            orth with &#10;&#10;            orth wihout" start-time="2023-03-16 13:28:41.297241" end-time="2023-03-16 13:28:41.298247" duration="0.001006" asserts="0"><properties><property name="python-version" value="3.9.13 (main, Aug 25 2022, 23:51:50) [MSC v.1916 64 bit (AMD64)]" /><property name="fspath" value="tests/test_utils.py" /></properties><environment framework-version="3.6.2" clr-version="3.9.13 (main, Aug 25 2022, 23:51:50) [MSC v.1916 64 bit (AMD64)]" os-version="10" platform="Windows" cwd="C:\Users\lsevereijns\Documents\nafigator" machine-name="AMD64" user="" user-domain="" culture="en_US" uiculture="en_US" os-architecture="64bit" /><failure><message><![CDATA[]]></message><stack-trace><![CDATA[None]]></stack-trace></failure><reason><message><![CDATA[]]></message></reason><output><![CDATA[]]></output></test-case><test-case id="183" name="tests/test_utils.py::TestUtils::test_prepare_comment_text" fullname="tests/test_utils.py::TestUtils::test_prepare_comment_text" methodname="test_prepare_comment_text" classname="TestUtils" runstate="Runnable" seed="1" result="Passed" label="This function prepares comment text for xml&#10;        Input:&#10;            text: comment to be converted to xml comment&#10;        Level: 0&#10;        Scenarios:&#10;            text with --&#10;            text ending with -&#10;            text without -- or -" start-time="2023-03-16 13:28:41.299241" end-time="2023-03-16 13:28:41.299241" duration="0.0" asserts="0"><properties><property name="python-version" value="3.9.13 (main, Aug 25 2022, 23:51:50) [MSC v.1916 64 bit (AMD64)]" /><property name="fspath" value="tests/test_utils.py" /></properties><environment framework-version="3.6.2" clr-version="3.9.13 (main, Aug 25 2022, 23:51:50) [MSC v.1916 64 bit (AMD64)]" os-version="10" platform="Windows" cwd="C:\Users\lsevereijns\Documents\nafigator" machine-name="AMD64" user="" user-domain="" culture="en_US" uiculture="en_US" os-architecture="64bit" /><failure><message><![CDATA[]]></message><stack-trace><![CDATA[None]]></stack-trace></failure><reason><message><![CDATA[]]></message></reason><output><![CDATA[]]></output></test-case><test-case id="184" name="tests/test_utils.py::TestUtils::test_remove_control_characters" fullname="tests/test_utils.py::TestUtils::test_remove_control_characters" methodname="test_remove_control_characters" classname="TestUtils" runstate="Runnable" seed="1" result="Passed" label="This function strips invalid XML characters that `lxml` cannot parse.&#10;        Input:&#10;            html: text from which control characters need to be removed&#10;        Level: 1&#10;        Scenarios:&#10;            text with a non-ascii character, such as an emoji" start-time="2023-03-16 13:28:41.300241" end-time="2023-03-16 13:28:41.301240" duration="0.000999" asserts="0"><properties><property name="python-version" value="3.9.13 (main, Aug 25 2022, 23:51:50) [MSC v.1916 64 bit (AMD64)]" /><property name="fspath" value="tests/test_utils.py" /></properties><environment framework-version="3.6.2" clr-version="3.9.13 (main, Aug 25 2022, 23:51:50) [MSC v.1916 64 bit (AMD64)]" os-version="10" platform="Windows" cwd="C:\Users\lsevereijns\Documents\nafigator" machine-name="AMD64" user="" user-domain="" culture="en_US" uiculture="en_US" os-architecture="64bit" /><failure><message><![CDATA[]]></message><stack-trace><![CDATA[None]]></stack-trace></failure><reason><message><![CDATA[]]></message></reason><output><![CDATA[]]></output></test-case><test-case id="185" name="tests/test_utils.py::TestUtils::test_remove_illegal_chars" fullname="tests/test_utils.py::TestUtils::test_remove_illegal_chars" methodname="test_remove_illegal_chars" classname="TestUtils" runstate="Runnable" seed="1" result="Passed" label="This function removes illegal characters in text&#10;        Input:&#10;            text: string from which illegal characters need to be removed&#10;        Level: 0&#10;        Scenarios:&#10;            text is None&#10;            text contains an illegal character" start-time="2023-03-16 13:28:41.301240" end-time="2023-03-16 13:28:41.302241" duration="0.001001" asserts="0"><properties><property name="python-version" value="3.9.13 (main, Aug 25 2022, 23:51:50) [MSC v.1916 64 bit (AMD64)]" /><property name="fspath" value="tests/test_utils.py" /></properties><environment framework-version="3.6.2" clr-version="3.9.13 (main, Aug 25 2022, 23:51:50) [MSC v.1916 64 bit (AMD64)]" os-version="10" platform="Windows" cwd="C:\Users\lsevereijns\Documents\nafigator" machine-name="AMD64" user="" user-domain="" culture="en_US" uiculture="en_US" os-architecture="64bit" /><failure><message><![CDATA[]]></message><stack-trace><![CDATA[None]]></stack-trace></failure><reason><message><![CDATA[]]></message></reason><output><![CDATA[]]></output></test-case><test-case id="186" name="tests/test_utils.py::TestUtils::test_remove_sublists" fullname="tests/test_utils.py::TestUtils::test_remove_sublists" methodname="test_remove_sublists" classname="TestUtils" runstate="Runnable" seed="1" result="Passed" label="OUTDATED - CHECK TO REMOVE&#10;        This function returns a list where all sublists are removed&#10;        Input:&#10;            lst: list with lists&#10;        Level: 0&#10;        Scenarios:&#10;            see examples in function" start-time="2023-03-16 13:28:41.302241" end-time="2023-03-16 13:28:41.303240" duration="0.000999" asserts="0"><properties><property name="python-version" value="3.9.13 (main, Aug 25 2022, 23:51:50) [MSC v.1916 64 bit (AMD64)]" /><property name="fspath" value="tests/test_utils.py" /></properties><environment framework-version="3.6.2" clr-version="3.9.13 (main, Aug 25 2022, 23:51:50) [MSC v.1916 64 bit (AMD64)]" os-version="10" platform="Windows" cwd="C:\Users\lsevereijns\Documents\nafigator" machine-name="AMD64" user="" user-domain="" culture="en_US" uiculture="en_US" os-architecture="64bit" /><failure><message><![CDATA[]]></message><stack-trace><![CDATA[None]]></stack-trace></failure><reason><message><![CDATA[]]></message></reason><output><![CDATA[]]></output></test-case><test-case id="187" name="tests/test_utils.py::TestUtils::test_strip_illegal_xml_characters" fullname="tests/test_utils.py::TestUtils::test_strip_illegal_xml_characters" methodname="test_strip_illegal_xml_characters" classname="TestUtils" runstate="Runnable" seed="1" result="Passed" label="This function compares the &quot;invalid XML character range&quot; numerically&#10;        (needs to be unembedded - out of scope)&#10;        Input:&#10;            s&#10;            def test_ult&#10;            base&#10;        Level: 0&#10;        Scenarios:&#10;            n containing an invalid XML character range&#10;            n not containing an invalid XML character range" start-time="2023-03-16 13:28:41.304243" end-time="2023-03-16 13:28:41.304243" duration="0.0" asserts="0"><properties><property name="python-version" value="3.9.13 (main, Aug 25 2022, 23:51:50) [MSC v.1916 64 bit (AMD64)]" /><property name="fspath" value="tests/test_utils.py" /></properties><environment framework-version="3.6.2" clr-version="3.9.13 (main, Aug 25 2022, 23:51:50) [MSC v.1916 64 bit (AMD64)]" os-version="10" platform="Windows" cwd="C:\Users\lsevereijns\Documents\nafigator" machine-name="AMD64" user="" user-domain="" culture="en_US" uiculture="en_US" os-architecture="64bit" /><failure><message><![CDATA[]]></message><stack-trace><![CDATA[None]]></stack-trace></failure><reason><message><![CDATA[]]></message></reason><output><![CDATA[]]></output></test-case><test-case id="188" name="tests/test_utils.py::TestUtils::test_sublist_indices" fullname="tests/test_utils.py::TestUtils::test_sublist_indices" methodname="test_sublist_indices" classname="TestUtils" runstate="Runnable" seed="1" result="Passed" label="This function returns a list of indices of the full list that contain the sub list&#10;        Input:&#10;            sub: list of words to search in the full list&#10;            full: list of words in which the words of sublist are searched&#10;        Level: 0&#10;        Scenarios:&#10;            sub list with 2 different words&#10;            sub list with 1 word being found twice&#10;            sub list in which words of sublist do not occur" start-time="2023-03-16 13:28:41.305241" end-time="2023-03-16 13:28:41.306240" duration="0.000999" asserts="0"><properties><property name="python-version" value="3.9.13 (main, Aug 25 2022, 23:51:50) [MSC v.1916 64 bit (AMD64)]" /><property name="fspath" value="tests/test_utils.py" /></properties><environment framework-version="3.6.2" clr-version="3.9.13 (main, Aug 25 2022, 23:51:50) [MSC v.1916 64 bit (AMD64)]" os-version="10" platform="Windows" cwd="C:\Users\lsevereijns\Documents\nafigator" machine-name="AMD64" user="" user-domain="" culture="en_US" uiculture="en_US" os-architecture="64bit" /><failure><message><![CDATA[]]></message><stack-trace><![CDATA[None]]></stack-trace></failure><reason><message><![CDATA[]]></message></reason><output><![CDATA[]]></output></test-case><test-case id="189" name="tests/test_utils.py::TestUtils::test_time_in_correct_format" fullname="tests/test_utils.py::TestUtils::test_time_in_correct_format" methodname="test_time_in_correct_format" classname="TestUtils" runstate="Runnable" seed="1" result="Passed" label="This function returns the current time (UTC) as a string&#10;        Input:&#10;            datetime_obj: the input to be converted&#10;        Level: 0&#10;        Scenarios:&#10;            check if conversion is correctly done" start-time="2023-03-16 13:28:41.306240" end-time="2023-03-16 13:28:41.307240" duration="0.001" asserts="0"><properties><property name="python-version" value="3.9.13 (main, Aug 25 2022, 23:51:50) [MSC v.1916 64 bit (AMD64)]" /><property name="fspath" value="tests/test_utils.py" /></properties><environment framework-version="3.6.2" clr-version="3.9.13 (main, Aug 25 2022, 23:51:50) [MSC v.1916 64 bit (AMD64)]" os-version="10" platform="Windows" cwd="C:\Users\lsevereijns\Documents\nafigator" machine-name="AMD64" user="" user-domain="" culture="en_US" uiculture="en_US" os-architecture="64bit" /><failure><message><![CDATA[]]></message><stack-trace><![CDATA[None]]></stack-trace></failure><reason><message><![CDATA[]]></message></reason><output><![CDATA[]]></output></test-case><environment framework-version="3.6.2" clr-version="3.9.13 (main, Aug 25 2022, 23:51:50) [MSC v.1916 64 bit (AMD64)]" os-version="10" platform="Windows" cwd="C:\Users\lsevereijns\Documents\nafigator" machine-name="AMD64" user="" user-domain="" culture="en_US" uiculture="en_US" os-architecture="64bit" /></test-suite><test-suite id="tests/test_nafigator.py::TestNafigator_pdf" name="tests/test_nafigator.py::TestNafigator_pdf" fullname="tests/test_nafigator.py::TestNafigator_pdf" methodname="" classname="" runstate="Runnable" type="Assembly" testcasecount="12" result="Passed" label="Tests for `nafigator` package." start-time="2023-03-16 13:28:40.376341" end-time="2023-03-16 13:28:40.933212" duration="0.556871" asserts="0" total="12" passed="0" failed="12" warnings="0" inconclusive="0" skipped="0"><properties><property name="python_version" value="3.9.13 (main, Aug 25 2022, 23:51:50) [MSC v.1916 64 bit (AMD64)]" /></properties><test-case id="129" name="tests/test_nafigator.py::TestNafigator_pdf::test_10_pdf_multiwords" fullname="tests/test_nafigator.py::TestNafigator_pdf::test_10_pdf_multiwords" methodname="test_10_pdf_multiwords" classname="TestNafigator_pdf" runstate="Runnable" seed="1" result="Failed" label="" start-time="2023-03-16 13:28:40.376341" end-time="2023-03-16 13:28:40.426345" duration="0.050004" asserts="0"><properties><property name="python-version" value="3.9.13 (main, Aug 25 2022, 23:51:50) [MSC v.1916 64 bit (AMD64)]" /><property name="fspath" value="tests/test_nafigator.py" /></properties><environment framework-version="3.6.2" clr-version="3.9.13 (main, Aug 25 2022, 23:51:50) [MSC v.1916 64 bit (AMD64)]" os-version="10" platform="Windows" cwd="C:\Users\lsevereijns\Documents\nafigator" machine-name="AMD64" user="" user-domain="" culture="en_US" uiculture="en_US" os-architecture="64bit" /><failure><message><![CDATA[self = &lt;tests.test_nafigator.TestNafigator_pdf testMethod=test_10_pdf_multiwords&gt;

    def test_10_pdf_multiwords(self):
&gt;       naf = NafDocument().open(join("tests", "tests", "example.naf.xml"))

tests\test_nafigator.py:1052: 
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 

self = &lt;nafigator.nafdocument.NafDocument object at 0x000002049C6744F0&gt;
input = 'tests\\tests\\example.naf.xml'

    def open(self, input: Union[str, bytes]):
        """Function to open a NafDocument
    
        Args:
            input: the location of the NafDocument to be opened or a bytes object containing the file content
    
        Returns:
            NafDocument: the NAF document that is opened
    
        """
        if isinstance(input, str):
&gt;           with open(input, "r", encoding="utf-8") as f:
E           FileNotFoundError: [Errno 2] No such file or directory: 'tests\\tests\\example.naf.xml'

nafigator\nafdocument.py:107: FileNotFoundError]]></message><stack-trace><![CDATA[C:\Users\lsevereijns\Documents\nafigator\nafigator\nafdocument.py:107: FileNotFoundError: [Errno 2] No such file or directory: 'tests\\tests\\example.naf.xml']]></stack-trace></failure><reason><message><![CDATA[&#x1b;[31m&#x1b;[1mERROR   &#x1b;[0m root:parse2naf.py:57 no or non-existing input specified]]></message></reason><output><![CDATA[&#x1b;[31m&#x1b;[1mERROR   &#x1b;[0m root:parse2naf.py:57 no or non-existing input specified]]></output></test-case><test-case id="130" name="tests/test_nafigator.py::TestNafigator_pdf::test_11_raw" fullname="tests/test_nafigator.py::TestNafigator_pdf::test_11_raw" methodname="test_11_raw" classname="TestNafigator_pdf" runstate="Runnable" seed="1" result="Failed" label="" start-time="2023-03-16 13:28:40.426345" end-time="2023-03-16 13:28:40.463348" duration="0.037003" asserts="0"><properties><property name="python-version" value="3.9.13 (main, Aug 25 2022, 23:51:50) [MSC v.1916 64 bit (AMD64)]" /><property name="fspath" value="tests/test_nafigator.py" /></properties><environment framework-version="3.6.2" clr-version="3.9.13 (main, Aug 25 2022, 23:51:50) [MSC v.1916 64 bit (AMD64)]" os-version="10" platform="Windows" cwd="C:\Users\lsevereijns\Documents\nafigator" machine-name="AMD64" user="" user-domain="" culture="en_US" uiculture="en_US" os-architecture="64bit" /><failure><message><![CDATA[self = &lt;tests.test_nafigator.TestNafigator_pdf testMethod=test_11_raw&gt;

    def test_11_raw(self):
&gt;       naf = NafDocument().open(join("tests", "tests", "example.naf.xml"))

tests\test_nafigator.py:1071: 
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 

self = &lt;nafigator.nafdocument.NafDocument object at 0x000002049C9F14A0&gt;
input = 'tests\\tests\\example.naf.xml'

    def open(self, input: Union[str, bytes]):
        """Function to open a NafDocument
    
        Args:
            input: the location of the NafDocument to be opened or a bytes object containing the file content
    
        Returns:
            NafDocument: the NAF document that is opened
    
        """
        if isinstance(input, str):
&gt;           with open(input, "r", encoding="utf-8") as f:
E           FileNotFoundError: [Errno 2] No such file or directory: 'tests\\tests\\example.naf.xml'

nafigator\nafdocument.py:107: FileNotFoundError]]></message><stack-trace><![CDATA[C:\Users\lsevereijns\Documents\nafigator\nafigator\nafdocument.py:107: FileNotFoundError: [Errno 2] No such file or directory: 'tests\\tests\\example.naf.xml']]></stack-trace></failure><reason><message><![CDATA[&#x1b;[31m&#x1b;[1mERROR   &#x1b;[0m root:parse2naf.py:57 no or non-existing input specified]]></message></reason><output><![CDATA[&#x1b;[31m&#x1b;[1mERROR   &#x1b;[0m root:parse2naf.py:57 no or non-existing input specified]]></output></test-case><test-case id="131" name="tests/test_nafigator.py::TestNafigator_pdf::test_13_formats_copy" fullname="tests/test_nafigator.py::TestNafigator_pdf::test_13_formats_copy" methodname="test_13_formats_copy" classname="TestNafigator_pdf" runstate="Runnable" seed="1" result="Failed" label="" start-time="2023-03-16 13:28:40.464350" end-time="2023-03-16 13:28:40.483353" duration="0.019003" asserts="0"><properties><property name="python-version" value="3.9.13 (main, Aug 25 2022, 23:51:50) [MSC v.1916 64 bit (AMD64)]" /><property name="fspath" value="tests/test_nafigator.py" /></properties><environment framework-version="3.6.2" clr-version="3.9.13 (main, Aug 25 2022, 23:51:50) [MSC v.1916 64 bit (AMD64)]" os-version="10" platform="Windows" cwd="C:\Users\lsevereijns\Documents\nafigator" machine-name="AMD64" user="" user-domain="" culture="en_US" uiculture="en_US" os-architecture="64bit" /><failure><message><![CDATA[self = &lt;tests.test_nafigator.TestNafigator_pdf testMethod=test_13_formats_copy&gt;

    def test_13_formats_copy(self):
        # @TODO: naf wordt nu meerdere keren de testen opgeroepen. Deze kan vooraf gedefinieerd worden.
        pdf_naf_copy_formats = parse2naf.generate_naf(
            input="tests" + os.sep + "tests" + os.sep + "example.pdf",
            engine="stanza",
            language="en",
            naf_version="v3.1",
            dtd_validation=False,
            params={'include pdf xml': True},
            nlp=None,
        )
&gt;       actual = pdf_naf_copy_formats.formats_copy
E       AttributeError: 'NoneType' object has no attribute 'formats_copy'

tests\test_nafigator.py:1218: AttributeError]]></message><stack-trace><![CDATA[C:\Users\lsevereijns\Documents\nafigator\tests\test_nafigator.py:1218: AttributeError: 'NoneType' object has no attribute 'formats_copy']]></stack-trace></failure><reason><message><![CDATA[&#x1b;[31m&#x1b;[1mERROR   &#x1b;[0m root:parse2naf.py:57 no or non-existing input specified
&#x1b;[31m&#x1b;[1mERROR   &#x1b;[0m root:parse2naf.py:57 no or non-existing input specified]]></message></reason><output><![CDATA[&#x1b;[31m&#x1b;[1mERROR   &#x1b;[0m root:parse2naf.py:57 no or non-existing input specified
&#x1b;[31m&#x1b;[1mERROR   &#x1b;[0m root:parse2naf.py:57 no or non-existing input specified]]></output></test-case><test-case id="132" name="tests/test_nafigator.py::TestNafigator_pdf::test_1_pdf_generate_naf" fullname="tests/test_nafigator.py::TestNafigator_pdf::test_1_pdf_generate_naf" methodname="test_1_pdf_generate_naf" classname="TestNafigator_pdf" runstate="Runnable" seed="1" result="Failed" label="" start-time="2023-03-16 13:28:40.484352" end-time="2023-03-16 13:28:40.502351" duration="0.017999" asserts="0"><properties><property name="python-version" value="3.9.13 (main, Aug 25 2022, 23:51:50) [MSC v.1916 64 bit (AMD64)]" /><property name="fspath" value="tests/test_nafigator.py" /></properties><environment framework-version="3.6.2" clr-version="3.9.13 (main, Aug 25 2022, 23:51:50) [MSC v.1916 64 bit (AMD64)]" os-version="10" platform="Windows" cwd="C:\Users\lsevereijns\Documents\nafigator" machine-name="AMD64" user="" user-domain="" culture="en_US" uiculture="en_US" os-architecture="64bit" /><failure><message><![CDATA[self = &lt;tests.test_nafigator.TestNafigator_pdf testMethod=test_1_pdf_generate_naf&gt;

    def test_1_pdf_generate_naf(self):
        """ """
        tree = parse2naf.generate_naf(
            input="tests" + os.sep + "tests" + os.sep + "example.pdf",
            engine="stanza",
            language="en",
            naf_version="v3.1",
            dtd_validation=False,
            params={},
            nlp=None,
        )
&gt;       assert (
            tree.write("tests" + os.sep + "tests" + os.sep + "example.naf.xml") is None
        )
E       AttributeError: 'NoneType' object has no attribute 'write'

tests\test_nafigator.py:42: AttributeError]]></message><stack-trace><![CDATA[C:\Users\lsevereijns\Documents\nafigator\tests\test_nafigator.py:42: AttributeError: 'NoneType' object has no attribute 'write']]></stack-trace></failure><reason><message><![CDATA[&#x1b;[31m&#x1b;[1mERROR   &#x1b;[0m root:parse2naf.py:57 no or non-existing input specified
&#x1b;[31m&#x1b;[1mERROR   &#x1b;[0m root:parse2naf.py:57 no or non-existing input specified]]></message></reason><output><![CDATA[&#x1b;[31m&#x1b;[1mERROR   &#x1b;[0m root:parse2naf.py:57 no or non-existing input specified
&#x1b;[31m&#x1b;[1mERROR   &#x1b;[0m root:parse2naf.py:57 no or non-existing input specified]]></output></test-case><test-case id="133" name="tests/test_nafigator.py::TestNafigator_pdf::test_1_split_pre_linguistic" fullname="tests/test_nafigator.py::TestNafigator_pdf::test_1_split_pre_linguistic" methodname="test_1_split_pre_linguistic" classname="TestNafigator_pdf" runstate="Runnable" seed="1" result="Failed" label="" start-time="2023-03-16 13:28:40.503351" end-time="2023-03-16 13:28:40.521353" duration="0.018002" asserts="0"><properties><property name="python-version" value="3.9.13 (main, Aug 25 2022, 23:51:50) [MSC v.1916 64 bit (AMD64)]" /><property name="fspath" value="tests/test_nafigator.py" /></properties><environment framework-version="3.6.2" clr-version="3.9.13 (main, Aug 25 2022, 23:51:50) [MSC v.1916 64 bit (AMD64)]" os-version="10" platform="Windows" cwd="C:\Users\lsevereijns\Documents\nafigator" machine-name="AMD64" user="" user-domain="" culture="en_US" uiculture="en_US" os-architecture="64bit" /><failure><message><![CDATA[self = &lt;tests.test_nafigator.TestNafigator_pdf testMethod=test_1_split_pre_linguistic&gt;

    def test_1_split_pre_linguistic(self):
        """ """
        # only save the preprocess steps
        tree = parse2naf.generate_naf(
            input=join("tests", "tests", "example.pdf"),
            engine="stanza",
            language="en",
            naf_version="v3.1",
            dtd_validation=False,
            params={"linguistic_layers": []},
            nlp=None,
        )
&gt;       tree.write(join("tests", "tests", "example_preprocess.naf.xml")) is None
E       AttributeError: 'NoneType' object has no attribute 'write'

tests\test_nafigator.py:58: AttributeError]]></message><stack-trace><![CDATA[C:\Users\lsevereijns\Documents\nafigator\tests\test_nafigator.py:58: AttributeError: 'NoneType' object has no attribute 'write']]></stack-trace></failure><reason><message><![CDATA[&#x1b;[31m&#x1b;[1mERROR   &#x1b;[0m root:parse2naf.py:57 no or non-existing input specified
&#x1b;[31m&#x1b;[1mERROR   &#x1b;[0m root:parse2naf.py:57 no or non-existing input specified]]></message></reason><output><![CDATA[&#x1b;[31m&#x1b;[1mERROR   &#x1b;[0m root:parse2naf.py:57 no or non-existing input specified
&#x1b;[31m&#x1b;[1mERROR   &#x1b;[0m root:parse2naf.py:57 no or non-existing input specified]]></output></test-case><test-case id="134" name="tests/test_nafigator.py::TestNafigator_pdf::test_2_pdf_header_filedesc" fullname="tests/test_nafigator.py::TestNafigator_pdf::test_2_pdf_header_filedesc" methodname="test_2_pdf_header_filedesc" classname="TestNafigator_pdf" runstate="Runnable" seed="1" result="Failed" label="" start-time="2023-03-16 13:28:40.522353" end-time="2023-03-16 13:28:40.559355" duration="0.037002" asserts="0"><properties><property name="python-version" value="3.9.13 (main, Aug 25 2022, 23:51:50) [MSC v.1916 64 bit (AMD64)]" /><property name="fspath" value="tests/test_nafigator.py" /></properties><environment framework-version="3.6.2" clr-version="3.9.13 (main, Aug 25 2022, 23:51:50) [MSC v.1916 64 bit (AMD64)]" os-version="10" platform="Windows" cwd="C:\Users\lsevereijns\Documents\nafigator" machine-name="AMD64" user="" user-domain="" culture="en_US" uiculture="en_US" os-architecture="64bit" /><failure><message><![CDATA[self = &lt;tests.test_nafigator.TestNafigator_pdf testMethod=test_2_pdf_header_filedesc&gt;

    def test_2_pdf_header_filedesc(self):
        """ """
&gt;       naf = NafDocument().open(
            "tests" + os.sep + "tests" + os.sep + "example.naf.xml"
        )

tests\test_nafigator.py:76: 
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 

self = &lt;nafigator.nafdocument.NafDocument object at 0x000002049CB38680&gt;
input = 'tests\\tests\\example.naf.xml'

    def open(self, input: Union[str, bytes]):
        """Function to open a NafDocument
    
        Args:
            input: the location of the NafDocument to be opened or a bytes object containing the file content
    
        Returns:
            NafDocument: the NAF document that is opened
    
        """
        if isinstance(input, str):
&gt;           with open(input, "r", encoding="utf-8") as f:
E           FileNotFoundError: [Errno 2] No such file or directory: 'tests\\tests\\example.naf.xml'

nafigator\nafdocument.py:107: FileNotFoundError]]></message><stack-trace><![CDATA[C:\Users\lsevereijns\Documents\nafigator\nafigator\nafdocument.py:107: FileNotFoundError: [Errno 2] No such file or directory: 'tests\\tests\\example.naf.xml']]></stack-trace></failure><reason><message><![CDATA[&#x1b;[31m&#x1b;[1mERROR   &#x1b;[0m root:parse2naf.py:57 no or non-existing input specified]]></message></reason><output><![CDATA[&#x1b;[31m&#x1b;[1mERROR   &#x1b;[0m root:parse2naf.py:57 no or non-existing input specified]]></output></test-case><test-case id="135" name="tests/test_nafigator.py::TestNafigator_pdf::test_3_pdf_header_public" fullname="tests/test_nafigator.py::TestNafigator_pdf::test_3_pdf_header_public" methodname="test_3_pdf_header_public" classname="TestNafigator_pdf" runstate="Runnable" seed="1" result="Failed" label="" start-time="2023-03-16 13:28:40.560358" end-time="2023-03-16 13:28:40.671160" duration="0.110802" asserts="0"><properties><property name="python-version" value="3.9.13 (main, Aug 25 2022, 23:51:50) [MSC v.1916 64 bit (AMD64)]" /><property name="fspath" value="tests/test_nafigator.py" /></properties><environment framework-version="3.6.2" clr-version="3.9.13 (main, Aug 25 2022, 23:51:50) [MSC v.1916 64 bit (AMD64)]" os-version="10" platform="Windows" cwd="C:\Users\lsevereijns\Documents\nafigator" machine-name="AMD64" user="" user-domain="" culture="en_US" uiculture="en_US" os-architecture="64bit" /><failure><message><![CDATA[self = &lt;tests.test_nafigator.TestNafigator_pdf testMethod=test_3_pdf_header_public&gt;

    def test_3_pdf_header_public(self):
        """ """
&gt;       naf = NafDocument().open(
            "tests" + os.sep + "tests" + os.sep + "example.naf.xml"
        )

tests\test_nafigator.py:89: 
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 

self = &lt;nafigator.nafdocument.NafDocument object at 0x000002049CA3DEA0&gt;
input = 'tests\\tests\\example.naf.xml'

    def open(self, input: Union[str, bytes]):
        """Function to open a NafDocument
    
        Args:
            input: the location of the NafDocument to be opened or a bytes object containing the file content
    
        Returns:
            NafDocument: the NAF document that is opened
    
        """
        if isinstance(input, str):
&gt;           with open(input, "r", encoding="utf-8") as f:
E           FileNotFoundError: [Errno 2] No such file or directory: 'tests\\tests\\example.naf.xml'

nafigator\nafdocument.py:107: FileNotFoundError]]></message><stack-trace><![CDATA[C:\Users\lsevereijns\Documents\nafigator\nafigator\nafdocument.py:107: FileNotFoundError: [Errno 2] No such file or directory: 'tests\\tests\\example.naf.xml']]></stack-trace></failure><reason><message><![CDATA[&#x1b;[31m&#x1b;[1mERROR   &#x1b;[0m root:parse2naf.py:57 no or non-existing input specified]]></message></reason><output><![CDATA[&#x1b;[31m&#x1b;[1mERROR   &#x1b;[0m root:parse2naf.py:57 no or non-existing input specified]]></output></test-case><test-case id="136" name="tests/test_nafigator.py::TestNafigator_pdf::test_5_pdf_formats" fullname="tests/test_nafigator.py::TestNafigator_pdf::test_5_pdf_formats" methodname="test_5_pdf_formats" classname="TestNafigator_pdf" runstate="Runnable" seed="1" result="Failed" label="" start-time="2023-03-16 13:28:40.672192" end-time="2023-03-16 13:28:40.709191" duration="0.036999" asserts="0"><properties><property name="python-version" value="3.9.13 (main, Aug 25 2022, 23:51:50) [MSC v.1916 64 bit (AMD64)]" /><property name="fspath" value="tests/test_nafigator.py" /></properties><environment framework-version="3.6.2" clr-version="3.9.13 (main, Aug 25 2022, 23:51:50) [MSC v.1916 64 bit (AMD64)]" os-version="10" platform="Windows" cwd="C:\Users\lsevereijns\Documents\nafigator" machine-name="AMD64" user="" user-domain="" culture="en_US" uiculture="en_US" os-architecture="64bit" /><failure><message><![CDATA[self = &lt;tests.test_nafigator.TestNafigator_pdf testMethod=test_5_pdf_formats&gt;

    def test_5_pdf_formats(self):
&gt;       naf = NafDocument().open(join("tests", "tests", "example.naf.xml"))

tests\test_nafigator.py:157: 
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 

self = &lt;nafigator.nafdocument.NafDocument object at 0x000002049CB38EA0&gt;
input = 'tests\\tests\\example.naf.xml'

    def open(self, input: Union[str, bytes]):
        """Function to open a NafDocument
    
        Args:
            input: the location of the NafDocument to be opened or a bytes object containing the file content
    
        Returns:
            NafDocument: the NAF document that is opened
    
        """
        if isinstance(input, str):
&gt;           with open(input, "r", encoding="utf-8") as f:
E           FileNotFoundError: [Errno 2] No such file or directory: 'tests\\tests\\example.naf.xml'

nafigator\nafdocument.py:107: FileNotFoundError]]></message><stack-trace><![CDATA[C:\Users\lsevereijns\Documents\nafigator\nafigator\nafdocument.py:107: FileNotFoundError: [Errno 2] No such file or directory: 'tests\\tests\\example.naf.xml']]></stack-trace></failure><reason><message><![CDATA[&#x1b;[31m&#x1b;[1mERROR   &#x1b;[0m root:parse2naf.py:57 no or non-existing input specified]]></message></reason><output><![CDATA[&#x1b;[31m&#x1b;[1mERROR   &#x1b;[0m root:parse2naf.py:57 no or non-existing input specified]]></output></test-case><test-case id="137" name="tests/test_nafigator.py::TestNafigator_pdf::test_6_pdf_entities" fullname="tests/test_nafigator.py::TestNafigator_pdf::test_6_pdf_entities" methodname="test_6_pdf_entities" classname="TestNafigator_pdf" runstate="Runnable" seed="1" result="Failed" label="" start-time="2023-03-16 13:28:40.709191" end-time="2023-03-16 13:28:40.746194" duration="0.037003" asserts="0"><properties><property name="python-version" value="3.9.13 (main, Aug 25 2022, 23:51:50) [MSC v.1916 64 bit (AMD64)]" /><property name="fspath" value="tests/test_nafigator.py" /></properties><environment framework-version="3.6.2" clr-version="3.9.13 (main, Aug 25 2022, 23:51:50) [MSC v.1916 64 bit (AMD64)]" os-version="10" platform="Windows" cwd="C:\Users\lsevereijns\Documents\nafigator" machine-name="AMD64" user="" user-domain="" culture="en_US" uiculture="en_US" os-architecture="64bit" /><failure><message><![CDATA[self = &lt;tests.test_nafigator.TestNafigator_pdf testMethod=test_6_pdf_entities&gt;

    def test_6_pdf_entities(self):
&gt;       naf = NafDocument().open(join("tests", "tests", "example.naf.xml"))

tests\test_nafigator.py:228: 
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 

self = &lt;nafigator.nafdocument.NafDocument object at 0x000002049C80E040&gt;
input = 'tests\\tests\\example.naf.xml'

    def open(self, input: Union[str, bytes]):
        """Function to open a NafDocument
    
        Args:
            input: the location of the NafDocument to be opened or a bytes object containing the file content
    
        Returns:
            NafDocument: the NAF document that is opened
    
        """
        if isinstance(input, str):
&gt;           with open(input, "r", encoding="utf-8") as f:
E           FileNotFoundError: [Errno 2] No such file or directory: 'tests\\tests\\example.naf.xml'

nafigator\nafdocument.py:107: FileNotFoundError]]></message><stack-trace><![CDATA[C:\Users\lsevereijns\Documents\nafigator\nafigator\nafdocument.py:107: FileNotFoundError: [Errno 2] No such file or directory: 'tests\\tests\\example.naf.xml']]></stack-trace></failure><reason><message><![CDATA[&#x1b;[31m&#x1b;[1mERROR   &#x1b;[0m root:parse2naf.py:57 no or non-existing input specified]]></message></reason><output><![CDATA[&#x1b;[31m&#x1b;[1mERROR   &#x1b;[0m root:parse2naf.py:57 no or non-existing input specified]]></output></test-case><test-case id="138" name="tests/test_nafigator.py::TestNafigator_pdf::test_7_pdf_text" fullname="tests/test_nafigator.py::TestNafigator_pdf::test_7_pdf_text" methodname="test_7_pdf_text" classname="TestNafigator_pdf" runstate="Runnable" seed="1" result="Failed" label="" start-time="2023-03-16 13:28:40.747197" end-time="2023-03-16 13:28:40.784199" duration="0.037002" asserts="0"><properties><property name="python-version" value="3.9.13 (main, Aug 25 2022, 23:51:50) [MSC v.1916 64 bit (AMD64)]" /><property name="fspath" value="tests/test_nafigator.py" /></properties><environment framework-version="3.6.2" clr-version="3.9.13 (main, Aug 25 2022, 23:51:50) [MSC v.1916 64 bit (AMD64)]" os-version="10" platform="Windows" cwd="C:\Users\lsevereijns\Documents\nafigator" machine-name="AMD64" user="" user-domain="" culture="en_US" uiculture="en_US" os-architecture="64bit" /><failure><message><![CDATA[self = &lt;tests.test_nafigator.TestNafigator_pdf testMethod=test_7_pdf_text&gt;

    def test_7_pdf_text(self):
&gt;       naf = NafDocument().open(join("tests", "tests", "example.naf.xml"))

tests\test_nafigator.py:245: 
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 

self = &lt;nafigator.nafdocument.NafDocument object at 0x000002049CA3D680&gt;
input = 'tests\\tests\\example.naf.xml'

    def open(self, input: Union[str, bytes]):
        """Function to open a NafDocument
    
        Args:
            input: the location of the NafDocument to be opened or a bytes object containing the file content
    
        Returns:
            NafDocument: the NAF document that is opened
    
        """
        if isinstance(input, str):
&gt;           with open(input, "r", encoding="utf-8") as f:
E           FileNotFoundError: [Errno 2] No such file or directory: 'tests\\tests\\example.naf.xml'

nafigator\nafdocument.py:107: FileNotFoundError]]></message><stack-trace><![CDATA[C:\Users\lsevereijns\Documents\nafigator\nafigator\nafdocument.py:107: FileNotFoundError: [Errno 2] No such file or directory: 'tests\\tests\\example.naf.xml']]></stack-trace></failure><reason><message><![CDATA[&#x1b;[31m&#x1b;[1mERROR   &#x1b;[0m root:parse2naf.py:57 no or non-existing input specified]]></message></reason><output><![CDATA[&#x1b;[31m&#x1b;[1mERROR   &#x1b;[0m root:parse2naf.py:57 no or non-existing input specified]]></output></test-case><test-case id="139" name="tests/test_nafigator.py::TestNafigator_pdf::test_8_pdf_terms" fullname="tests/test_nafigator.py::TestNafigator_pdf::test_8_pdf_terms" methodname="test_8_pdf_terms" classname="TestNafigator_pdf" runstate="Runnable" seed="1" result="Failed" label="" start-time="2023-03-16 13:28:40.784199" end-time="2023-03-16 13:28:40.820200" duration="0.036001" asserts="0"><properties><property name="python-version" value="3.9.13 (main, Aug 25 2022, 23:51:50) [MSC v.1916 64 bit (AMD64)]" /><property name="fspath" value="tests/test_nafigator.py" /></properties><environment framework-version="3.6.2" clr-version="3.9.13 (main, Aug 25 2022, 23:51:50) [MSC v.1916 64 bit (AMD64)]" os-version="10" platform="Windows" cwd="C:\Users\lsevereijns\Documents\nafigator" machine-name="AMD64" user="" user-domain="" culture="en_US" uiculture="en_US" os-architecture="64bit" /><failure><message><![CDATA[self = &lt;tests.test_nafigator.TestNafigator_pdf testMethod=test_8_pdf_terms&gt;

    def test_8_pdf_terms(self):
&gt;       naf = NafDocument().open(join("tests", "tests", "example.naf.xml"))

tests\test_nafigator.py:703: 
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 

self = &lt;nafigator.nafdocument.NafDocument object at 0x000002049CA3D310&gt;
input = 'tests\\tests\\example.naf.xml'

    def open(self, input: Union[str, bytes]):
        """Function to open a NafDocument
    
        Args:
            input: the location of the NafDocument to be opened or a bytes object containing the file content
    
        Returns:
            NafDocument: the NAF document that is opened
    
        """
        if isinstance(input, str):
&gt;           with open(input, "r", encoding="utf-8") as f:
E           FileNotFoundError: [Errno 2] No such file or directory: 'tests\\tests\\example.naf.xml'

nafigator\nafdocument.py:107: FileNotFoundError]]></message><stack-trace><![CDATA[C:\Users\lsevereijns\Documents\nafigator\nafigator\nafdocument.py:107: FileNotFoundError: [Errno 2] No such file or directory: 'tests\\tests\\example.naf.xml']]></stack-trace></failure><reason><message><![CDATA[&#x1b;[31m&#x1b;[1mERROR   &#x1b;[0m root:parse2naf.py:57 no or non-existing input specified]]></message></reason><output><![CDATA[&#x1b;[31m&#x1b;[1mERROR   &#x1b;[0m root:parse2naf.py:57 no or non-existing input specified]]></output></test-case><test-case id="140" name="tests/test_nafigator.py::TestNafigator_pdf::test_9_pdf_dependencies" fullname="tests/test_nafigator.py::TestNafigator_pdf::test_9_pdf_dependencies" methodname="test_9_pdf_dependencies" classname="TestNafigator_pdf" runstate="Runnable" seed="1" result="Failed" label="" start-time="2023-03-16 13:28:40.821203" end-time="2023-03-16 13:28:40.933212" duration="0.112009" asserts="0"><properties><property name="python-version" value="3.9.13 (main, Aug 25 2022, 23:51:50) [MSC v.1916 64 bit (AMD64)]" /><property name="fspath" value="tests/test_nafigator.py" /></properties><environment framework-version="3.6.2" clr-version="3.9.13 (main, Aug 25 2022, 23:51:50) [MSC v.1916 64 bit (AMD64)]" os-version="10" platform="Windows" cwd="C:\Users\lsevereijns\Documents\nafigator" machine-name="AMD64" user="" user-domain="" culture="en_US" uiculture="en_US" os-architecture="64bit" /><failure><message><![CDATA[self = &lt;tests.test_nafigator.TestNafigator_pdf testMethod=test_9_pdf_dependencies&gt;

    def test_9_pdf_dependencies(self):
&gt;       naf = NafDocument().open(join("tests", "tests", "example.naf.xml"))

tests\test_nafigator.py:995: 
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 

self = &lt;nafigator.nafdocument.NafDocument object at 0x000002049CA34900&gt;
input = 'tests\\tests\\example.naf.xml'

    def open(self, input: Union[str, bytes]):
        """Function to open a NafDocument
    
        Args:
            input: the location of the NafDocument to be opened or a bytes object containing the file content
    
        Returns:
            NafDocument: the NAF document that is opened
    
        """
        if isinstance(input, str):
&gt;           with open(input, "r", encoding="utf-8") as f:
E           FileNotFoundError: [Errno 2] No such file or directory: 'tests\\tests\\example.naf.xml'

nafigator\nafdocument.py:107: FileNotFoundError]]></message><stack-trace><![CDATA[C:\Users\lsevereijns\Documents\nafigator\nafigator\nafdocument.py:107: FileNotFoundError: [Errno 2] No such file or directory: 'tests\\tests\\example.naf.xml']]></stack-trace></failure><reason><message><![CDATA[&#x1b;[31m&#x1b;[1mERROR   &#x1b;[0m root:parse2naf.py:57 no or non-existing input specified]]></message></reason><output><![CDATA[&#x1b;[31m&#x1b;[1mERROR   &#x1b;[0m root:parse2naf.py:57 no or non-existing input specified]]></output></test-case><environment framework-version="3.6.2" clr-version="3.9.13 (main, Aug 25 2022, 23:51:50) [MSC v.1916 64 bit (AMD64)]" os-version="10" platform="Windows" cwd="C:\Users\lsevereijns\Documents\nafigator" machine-name="AMD64" user="" user-domain="" culture="en_US" uiculture="en_US" os-architecture="64bit" /></test-suite><test-suite id="tests/test_nafdocument.py::TestNafDocument" name="tests/test_nafdocument.py::TestNafDocument" fullname="tests/test_nafdocument.py::TestNafDocument" methodname="" classname="" runstate="Runnable" type="Assembly" testcasecount="29" result="Passed" label="" start-time="2023-03-16 13:28:39.089165" end-time="2023-03-16 13:28:40.375341" duration="1.286176" asserts="0" total="29" passed="9" failed="20" warnings="0" inconclusive="0" skipped="0"><properties><property name="python_version" value="3.9.13 (main, Aug 25 2022, 23:51:50) [MSC v.1916 64 bit (AMD64)]" /></properties><test-case id="100" name="tests/test_nafdocument.py::TestNafDocument::test_generate[language_var]" fullname="tests/test_nafdocument.py::TestNafDocument::test_generate[language_var]" methodname="test_generate[language_var]" classname="TestNafDocument" runstate="Runnable" seed="1" result="Passed" label="This function tests whether the naf document initalization is done correctly&#10;        input: etree._ElementTree + dict&#10;        level: 2&#10;        scenarios: check added features vs input" start-time="2023-03-16 13:28:39.089165" end-time="2023-03-16 13:28:39.090166" duration="0.001001" asserts="0"><properties><property name="python-version" value="3.9.13 (main, Aug 25 2022, 23:51:50) [MSC v.1916 64 bit (AMD64)]" /><property name="fspath" value="tests/test_nafdocument.py" /></properties><environment framework-version="3.6.2" clr-version="3.9.13 (main, Aug 25 2022, 23:51:50) [MSC v.1916 64 bit (AMD64)]" os-version="10" platform="Windows" cwd="C:\Users\lsevereijns\Documents\nafigator" machine-name="AMD64" user="" user-domain="" culture="en_US" uiculture="en_US" os-architecture="64bit" /><failure><message><![CDATA[]]></message><stack-trace><![CDATA[None]]></stack-trace></failure><reason><message><![CDATA[]]></message></reason><output><![CDATA[]]></output></test-case><test-case id="101" name="tests/test_nafdocument.py::TestNafDocument::test_generate[None]" fullname="tests/test_nafdocument.py::TestNafDocument::test_generate[None]" methodname="test_generate[None]" classname="TestNafDocument" runstate="Runnable" seed="1" result="Passed" label="This function tests whether the naf document initalization is done correctly&#10;        input: etree._ElementTree + dict&#10;        level: 2&#10;        scenarios: check added features vs input" start-time="2023-03-16 13:28:39.090166" end-time="2023-03-16 13:28:39.091165" duration="0.000999" asserts="0"><properties><property name="python-version" value="3.9.13 (main, Aug 25 2022, 23:51:50) [MSC v.1916 64 bit (AMD64)]" /><property name="fspath" value="tests/test_nafdocument.py" /></properties><environment framework-version="3.6.2" clr-version="3.9.13 (main, Aug 25 2022, 23:51:50) [MSC v.1916 64 bit (AMD64)]" os-version="10" platform="Windows" cwd="C:\Users\lsevereijns\Documents\nafigator" machine-name="AMD64" user="" user-domain="" culture="en_US" uiculture="en_US" os-architecture="64bit" /><failure><message><![CDATA[]]></message><stack-trace><![CDATA[None]]></stack-trace></failure><reason><message><![CDATA[]]></message></reason><output><![CDATA[]]></output></test-case><test-case id="102" name="tests/test_nafdocument.py::TestNafDocument::test_open[tests/tests/example.naf.xml-True]" fullname="tests/test_nafdocument.py::TestNafDocument::test_open[tests/tests/example.naf.xml-True]" methodname="test_open[tests/tests/example.naf.xml-True]" classname="TestNafDocument" runstate="Runnable" seed="1" result="Passed" label="This function tests whether the naf document is opened correctly&#10;        input: filepath (str) or bytes&#10;        level: 2&#10;        scenarios: check open and set root functions are called" start-time="2023-03-16 13:28:39.092164" end-time="2023-03-16 13:28:39.097164" duration="0.005" asserts="0"><properties><property name="python-version" value="3.9.13 (main, Aug 25 2022, 23:51:50) [MSC v.1916 64 bit (AMD64)]" /><property name="fspath" value="tests/test_nafdocument.py" /></properties><environment framework-version="3.6.2" clr-version="3.9.13 (main, Aug 25 2022, 23:51:50) [MSC v.1916 64 bit (AMD64)]" os-version="10" platform="Windows" cwd="C:\Users\lsevereijns\Documents\nafigator" machine-name="AMD64" user="" user-domain="" culture="en_US" uiculture="en_US" os-architecture="64bit" /><failure><message><![CDATA[]]></message><stack-trace><![CDATA[None]]></stack-trace></failure><reason><message><![CDATA[]]></message></reason><output><![CDATA[]]></output></test-case><test-case id="103" name="tests/test_nafdocument.py::TestNafDocument::test_open[content-False]" fullname="tests/test_nafdocument.py::TestNafDocument::test_open[content-False]" methodname="test_open[content-False]" classname="TestNafDocument" runstate="Runnable" seed="1" result="Passed" label="This function tests whether the naf document is opened correctly&#10;        input: filepath (str) or bytes&#10;        level: 2&#10;        scenarios: check open and set root functions are called" start-time="2023-03-16 13:28:39.097164" end-time="2023-03-16 13:28:39.102167" duration="0.005003" asserts="0"><properties><property name="python-version" value="3.9.13 (main, Aug 25 2022, 23:51:50) [MSC v.1916 64 bit (AMD64)]" /><property name="fspath" value="tests/test_nafdocument.py" /></properties><environment framework-version="3.6.2" clr-version="3.9.13 (main, Aug 25 2022, 23:51:50) [MSC v.1916 64 bit (AMD64)]" os-version="10" platform="Windows" cwd="C:\Users\lsevereijns\Documents\nafigator" machine-name="AMD64" user="" user-domain="" culture="en_US" uiculture="en_US" os-architecture="64bit" /><failure><message><![CDATA[]]></message><stack-trace><![CDATA[None]]></stack-trace></failure><reason><message><![CDATA[]]></message></reason><output><![CDATA[]]></output></test-case><test-case id="104" name="tests/test_nafdocument.py::TestNafDocument::test_open_error" fullname="tests/test_nafdocument.py::TestNafDocument::test_open_error" methodname="test_open_error" classname="TestNafDocument" runstate="Runnable" seed="1" result="Passed" label="This function tests whether an exception is raised when the wrong type is trying to be opened&#10;        input: int&#10;        level: 2&#10;        scenarios: check exception raised" start-time="2023-03-16 13:28:39.102167" end-time="2023-03-16 13:28:39.103164" duration="0.000997" asserts="0"><properties><property name="python-version" value="3.9.13 (main, Aug 25 2022, 23:51:50) [MSC v.1916 64 bit (AMD64)]" /><property name="fspath" value="tests/test_nafdocument.py" /></properties><environment framework-version="3.6.2" clr-version="3.9.13 (main, Aug 25 2022, 23:51:50) [MSC v.1916 64 bit (AMD64)]" os-version="10" platform="Windows" cwd="C:\Users\lsevereijns\Documents\nafigator" machine-name="AMD64" user="" user-domain="" culture="en_US" uiculture="en_US" os-architecture="64bit" /><failure><message><![CDATA[]]></message><stack-trace><![CDATA[None]]></stack-trace></failure><reason><message><![CDATA[]]></message></reason><output><![CDATA[]]></output></test-case><test-case id="105" name="tests/test_nafdocument.py::TestNafDocument::test_subelement[data0-attributes_to_ignore0]" fullname="tests/test_nafdocument.py::TestNafDocument::test_subelement[data0-attributes_to_ignore0]" methodname="test_subelement[data0-attributes_to_ignore0]" classname="TestNafDocument" runstate="Runnable" seed="1" result="Failed" label="This function tests whether subelement is added correctly&#10;        input: etree._ElementTree OPTIONAL: [etree._Element, tag-string, data-dict, ignore-list]&#10;        level: 0&#10;        scenarios: check element input and ignore list&#10;        #WARNING Does not override existing subelements" start-time="2023-03-16 13:28:39.590276" end-time="2023-03-16 13:28:39.591276" duration="0" asserts="0"><properties><property name="python-version" value="3.9.13 (main, Aug 25 2022, 23:51:50) [MSC v.1916 64 bit (AMD64)]" /><property name="fspath" value="tests/test_nafdocument.py" /></properties><environment framework-version="3.6.2" clr-version="3.9.13 (main, Aug 25 2022, 23:51:50) [MSC v.1916 64 bit (AMD64)]" os-version="10" platform="Windows" cwd="C:\Users\lsevereijns\Documents\nafigator" machine-name="AMD64" user="" user-domain="" culture="en_US" uiculture="en_US" os-architecture="64bit" /><failure><message><![CDATA[]]></message><stack-trace><![CDATA[]]></stack-trace></failure><reason><message><![CDATA[]]></message></reason><output><![CDATA[]]></output></test-case><test-case id="106" name="tests/test_nafdocument.py::TestNafDocument::test_subelement[data1-attributes_to_ignore1]" fullname="tests/test_nafdocument.py::TestNafDocument::test_subelement[data1-attributes_to_ignore1]" methodname="test_subelement[data1-attributes_to_ignore1]" classname="TestNafDocument" runstate="Runnable" seed="1" result="Failed" label="This function tests whether subelement is added correctly&#10;        input: etree._ElementTree OPTIONAL: [etree._Element, tag-string, data-dict, ignore-list]&#10;        level: 0&#10;        scenarios: check element input and ignore list&#10;        #WARNING Does not override existing subelements" start-time="2023-03-16 13:28:39.621277" end-time="2023-03-16 13:28:39.621277" duration="0" asserts="0"><properties><property name="python-version" value="3.9.13 (main, Aug 25 2022, 23:51:50) [MSC v.1916 64 bit (AMD64)]" /><property name="fspath" value="tests/test_nafdocument.py" /></properties><environment framework-version="3.6.2" clr-version="3.9.13 (main, Aug 25 2022, 23:51:50) [MSC v.1916 64 bit (AMD64)]" os-version="10" platform="Windows" cwd="C:\Users\lsevereijns\Documents\nafigator" machine-name="AMD64" user="" user-domain="" culture="en_US" uiculture="en_US" os-architecture="64bit" /><failure><message><![CDATA[]]></message><stack-trace><![CDATA[]]></stack-trace></failure><reason><message><![CDATA[]]></message></reason><output><![CDATA[]]></output></test-case><test-case id="107" name="tests/test_nafdocument.py::TestNafDocument::test_add_processor_Element" fullname="tests/test_nafdocument.py::TestNafDocument::test_add_processor_Element" methodname="test_add_processor_Element" classname="TestNafDocument" runstate="Runnable" seed="1" result="Failed" label="This function tests whether processor element is added correctly&#10;        input: etree._ElementTree + str + ProcessorElement&#10;        level: 1&#10;        scenarios: check element input and ignore list" start-time="2023-03-16 13:28:39.651280" end-time="2023-03-16 13:28:39.651280" duration="0" asserts="0"><properties><property name="python-version" value="3.9.13 (main, Aug 25 2022, 23:51:50) [MSC v.1916 64 bit (AMD64)]" /><property name="fspath" value="tests/test_nafdocument.py" /></properties><environment framework-version="3.6.2" clr-version="3.9.13 (main, Aug 25 2022, 23:51:50) [MSC v.1916 64 bit (AMD64)]" os-version="10" platform="Windows" cwd="C:\Users\lsevereijns\Documents\nafigator" machine-name="AMD64" user="" user-domain="" culture="en_US" uiculture="en_US" os-architecture="64bit" /><failure><message><![CDATA[]]></message><stack-trace><![CDATA[]]></stack-trace></failure><reason><message><![CDATA[]]></message></reason><output><![CDATA[]]></output></test-case><test-case id="108" name="tests/test_nafdocument.py::TestNafDocument::test_validate" fullname="tests/test_nafdocument.py::TestNafDocument::test_validate" methodname="test_validate" classname="TestNafDocument" runstate="Runnable" seed="1" result="Failed" label="test validate output&#10;        input:etree._ElementTree&#10;        level: 1 (uses utilsfunction load_dtd)&#10;        scenarios: check xml string&#10;        # TODO refactor nafigator code to support universal naf format. Also consider moving to integratin test" start-time="2023-03-16 13:28:39.681283" end-time="2023-03-16 13:28:39.681283" duration="0" asserts="0"><properties><property name="python-version" value="3.9.13 (main, Aug 25 2022, 23:51:50) [MSC v.1916 64 bit (AMD64)]" /><property name="fspath" value="tests/test_nafdocument.py" /></properties><environment framework-version="3.6.2" clr-version="3.9.13 (main, Aug 25 2022, 23:51:50) [MSC v.1916 64 bit (AMD64)]" os-version="10" platform="Windows" cwd="C:\Users\lsevereijns\Documents\nafigator" machine-name="AMD64" user="" user-domain="" culture="en_US" uiculture="en_US" os-architecture="64bit" /><failure><message><![CDATA[]]></message><stack-trace><![CDATA[]]></stack-trace></failure><reason><message><![CDATA[]]></message></reason><output><![CDATA[]]></output></test-case><test-case id="109" name="tests/test_nafdocument.py::TestNafDocument::test_get_attributes" fullname="tests/test_nafdocument.py::TestNafDocument::test_get_attributes" methodname="test_get_attributes" classname="TestNafDocument" runstate="Runnable" seed="1" result="Passed" label="test data of attributes output&#10;        input: etree._ElementTree + dictlike OPTIONAL = [namespace-str, exclude-list]&#10;        level: 0&#10;        scenarios: check attributes vs input&#10;        # TODO namespace not included yet in test. Add once namespaces are" start-time="2023-03-16 13:28:39.682285" end-time="2023-03-16 13:28:39.683284" duration="0.000999" asserts="0"><properties><property name="python-version" value="3.9.13 (main, Aug 25 2022, 23:51:50) [MSC v.1916 64 bit (AMD64)]" /><property name="fspath" value="tests/test_nafdocument.py" /></properties><environment framework-version="3.6.2" clr-version="3.9.13 (main, Aug 25 2022, 23:51:50) [MSC v.1916 64 bit (AMD64)]" os-version="10" platform="Windows" cwd="C:\Users\lsevereijns\Documents\nafigator" machine-name="AMD64" user="" user-domain="" culture="en_US" uiculture="en_US" os-architecture="64bit" /><failure><message><![CDATA[]]></message><stack-trace><![CDATA[None]]></stack-trace></failure><reason><message><![CDATA[]]></message></reason><output><![CDATA[]]></output></test-case><test-case id="110" name="tests/test_nafdocument.py::TestNafDocument::test_layer" fullname="tests/test_nafdocument.py::TestNafDocument::test_layer" methodname="test_layer" classname="TestNafDocument" runstate="Runnable" seed="1" result="Failed" label="test layer output&#10;        input: etree._ElementTree + str&#10;        level: 0&#10;        scenarios: check layer output" start-time="2023-03-16 13:28:39.712285" end-time="2023-03-16 13:28:39.713285" duration="0" asserts="0"><properties><property name="python-version" value="3.9.13 (main, Aug 25 2022, 23:51:50) [MSC v.1916 64 bit (AMD64)]" /><property name="fspath" value="tests/test_nafdocument.py" /></properties><environment framework-version="3.6.2" clr-version="3.9.13 (main, Aug 25 2022, 23:51:50) [MSC v.1916 64 bit (AMD64)]" os-version="10" platform="Windows" cwd="C:\Users\lsevereijns\Documents\nafigator" machine-name="AMD64" user="" user-domain="" culture="en_US" uiculture="en_US" os-architecture="64bit" /><failure><message><![CDATA[]]></message><stack-trace><![CDATA[]]></stack-trace></failure><reason><message><![CDATA[]]></message></reason><output><![CDATA[]]></output></test-case><test-case id="111" name="tests/test_nafdocument.py::TestNafDocument::test_add_filedesc_element" fullname="tests/test_nafdocument.py::TestNafDocument::test_add_filedesc_element" methodname="test_add_filedesc_element" classname="TestNafDocument" runstate="Runnable" seed="1" result="Failed" label="test added filedescription element&#10;        input: etree._ElementTree + dict&#10;        level: 1&#10;        scenarios: test elements vs input" start-time="2023-03-16 13:28:39.742289" end-time="2023-03-16 13:28:39.742289" duration="0" asserts="0"><properties><property name="python-version" value="3.9.13 (main, Aug 25 2022, 23:51:50) [MSC v.1916 64 bit (AMD64)]" /><property name="fspath" value="tests/test_nafdocument.py" /></properties><environment framework-version="3.6.2" clr-version="3.9.13 (main, Aug 25 2022, 23:51:50) [MSC v.1916 64 bit (AMD64)]" os-version="10" platform="Windows" cwd="C:\Users\lsevereijns\Documents\nafigator" machine-name="AMD64" user="" user-domain="" culture="en_US" uiculture="en_US" os-architecture="64bit" /><failure><message><![CDATA[]]></message><stack-trace><![CDATA[]]></stack-trace></failure><reason><message><![CDATA[]]></message></reason><output><![CDATA[]]></output></test-case><test-case id="112" name="tests/test_nafdocument.py::TestNafDocument::test_add_public_element" fullname="tests/test_nafdocument.py::TestNafDocument::test_add_public_element" methodname="test_add_public_element" classname="TestNafDocument" runstate="Runnable" seed="1" result="Failed" label="test added public element&#10;        input: etree._ElementTree + dict&#10;        level: 1&#10;        scenarios: test elements vs input" start-time="2023-03-16 13:28:39.842302" end-time="2023-03-16 13:28:39.843298" duration="0" asserts="0"><properties><property name="python-version" value="3.9.13 (main, Aug 25 2022, 23:51:50) [MSC v.1916 64 bit (AMD64)]" /><property name="fspath" value="tests/test_nafdocument.py" /></properties><environment framework-version="3.6.2" clr-version="3.9.13 (main, Aug 25 2022, 23:51:50) [MSC v.1916 64 bit (AMD64)]" os-version="10" platform="Windows" cwd="C:\Users\lsevereijns\Documents\nafigator" machine-name="AMD64" user="" user-domain="" culture="en_US" uiculture="en_US" os-architecture="64bit" /><failure><message><![CDATA[]]></message><stack-trace><![CDATA[]]></stack-trace></failure><reason><message><![CDATA[]]></message></reason><output><![CDATA[]]></output></test-case><test-case id="113" name="tests/test_nafdocument.py::TestNafDocument::test_add_wf_element[plain text]" fullname="tests/test_nafdocument.py::TestNafDocument::test_add_wf_element[plain text]" methodname="test_add_wf_element[plain text]" classname="TestNafDocument" runstate="Runnable" seed="1" result="Failed" label="test added wf element&#10;        input: etree._ElementTree + wordform element + boolean&#10;        level: 1&#10;        scenarios: test elements vs input" start-time="2023-03-16 13:28:39.871299" end-time="2023-03-16 13:28:39.872299" duration="0" asserts="0"><properties><property name="python-version" value="3.9.13 (main, Aug 25 2022, 23:51:50) [MSC v.1916 64 bit (AMD64)]" /><property name="fspath" value="tests/test_nafdocument.py" /></properties><environment framework-version="3.6.2" clr-version="3.9.13 (main, Aug 25 2022, 23:51:50) [MSC v.1916 64 bit (AMD64)]" os-version="10" platform="Windows" cwd="C:\Users\lsevereijns\Documents\nafigator" machine-name="AMD64" user="" user-domain="" culture="en_US" uiculture="en_US" os-architecture="64bit" /><failure><message><![CDATA[]]></message><stack-trace><![CDATA[]]></stack-trace></failure><reason><message><![CDATA[]]></message></reason><output><![CDATA[]]></output></test-case><test-case id="114" name="tests/test_nafdocument.py::TestNafDocument::test_add_wf_element[text with ]]&gt; more text]" fullname="tests/test_nafdocument.py::TestNafDocument::test_add_wf_element[text with ]]&gt; more text]" methodname="test_add_wf_element[text with ]]&gt; more text]" classname="TestNafDocument" runstate="Runnable" seed="1" result="Failed" label="test added wf element&#10;        input: etree._ElementTree + wordform element + boolean&#10;        level: 1&#10;        scenarios: test elements vs input" start-time="2023-03-16 13:28:39.901304" end-time="2023-03-16 13:28:39.902301" duration="0" asserts="0"><properties><property name="python-version" value="3.9.13 (main, Aug 25 2022, 23:51:50) [MSC v.1916 64 bit (AMD64)]" /><property name="fspath" value="tests/test_nafdocument.py" /></properties><environment framework-version="3.6.2" clr-version="3.9.13 (main, Aug 25 2022, 23:51:50) [MSC v.1916 64 bit (AMD64)]" os-version="10" platform="Windows" cwd="C:\Users\lsevereijns\Documents\nafigator" machine-name="AMD64" user="" user-domain="" culture="en_US" uiculture="en_US" os-architecture="64bit" /><failure><message><![CDATA[]]></message><stack-trace><![CDATA[]]></stack-trace></failure><reason><message><![CDATA[]]></message></reason><output><![CDATA[]]></output></test-case><test-case id="115" name="tests/test_nafdocument.py::TestNafDocument::test_add_raw_text_element" fullname="tests/test_nafdocument.py::TestNafDocument::test_add_raw_text_element" methodname="test_add_raw_text_element" classname="TestNafDocument" runstate="Runnable" seed="1" result="Failed" label="test added wf element&#10;        input: etree._ElementTree + DependencyRelation + boolean&#10;        level: 1&#10;        scenarios: test elements vs input" start-time="2023-03-16 13:28:39.932304" end-time="2023-03-16 13:28:39.932304" duration="0" asserts="0"><properties><property name="python-version" value="3.9.13 (main, Aug 25 2022, 23:51:50) [MSC v.1916 64 bit (AMD64)]" /><property name="fspath" value="tests/test_nafdocument.py" /></properties><environment framework-version="3.6.2" clr-version="3.9.13 (main, Aug 25 2022, 23:51:50) [MSC v.1916 64 bit (AMD64)]" os-version="10" platform="Windows" cwd="C:\Users\lsevereijns\Documents\nafigator" machine-name="AMD64" user="" user-domain="" culture="en_US" uiculture="en_US" os-architecture="64bit" /><failure><message><![CDATA[]]></message><stack-trace><![CDATA[]]></stack-trace></failure><reason><message><![CDATA[]]></message></reason><output><![CDATA[]]></output></test-case><test-case id="116" name="tests/test_nafdocument.py::TestNafDocument::test_add_entity_element[span0-ext_refs0]" fullname="tests/test_nafdocument.py::TestNafDocument::test_add_entity_element[span0-ext_refs0]" methodname="test_add_entity_element[span0-ext_refs0]" classname="TestNafDocument" runstate="Runnable" seed="1" result="Failed" label="test added entity element&#10;        input: etree._ElementTree + EntityElement + str + boolean&#10;        level: 1&#10;        scenarios: test elements vs input" start-time="2023-03-16 13:28:39.961306" end-time="2023-03-16 13:28:39.962307" duration="0" asserts="0"><properties><property name="python-version" value="3.9.13 (main, Aug 25 2022, 23:51:50) [MSC v.1916 64 bit (AMD64)]" /><property name="fspath" value="tests/test_nafdocument.py" /></properties><environment framework-version="3.6.2" clr-version="3.9.13 (main, Aug 25 2022, 23:51:50) [MSC v.1916 64 bit (AMD64)]" os-version="10" platform="Windows" cwd="C:\Users\lsevereijns\Documents\nafigator" machine-name="AMD64" user="" user-domain="" culture="en_US" uiculture="en_US" os-architecture="64bit" /><failure><message><![CDATA[]]></message><stack-trace><![CDATA[]]></stack-trace></failure><reason><message><![CDATA[]]></message></reason><output><![CDATA[]]></output></test-case><test-case id="117" name="tests/test_nafdocument.py::TestNafDocument::test_add_entity_element[span1-ext_refs1]" fullname="tests/test_nafdocument.py::TestNafDocument::test_add_entity_element[span1-ext_refs1]" methodname="test_add_entity_element[span1-ext_refs1]" classname="TestNafDocument" runstate="Runnable" seed="1" result="Failed" label="test added entity element&#10;        input: etree._ElementTree + EntityElement + str + boolean&#10;        level: 1&#10;        scenarios: test elements vs input" start-time="2023-03-16 13:28:39.990309" end-time="2023-03-16 13:28:39.991308" duration="0" asserts="0"><properties><property name="python-version" value="3.9.13 (main, Aug 25 2022, 23:51:50) [MSC v.1916 64 bit (AMD64)]" /><property name="fspath" value="tests/test_nafdocument.py" /></properties><environment framework-version="3.6.2" clr-version="3.9.13 (main, Aug 25 2022, 23:51:50) [MSC v.1916 64 bit (AMD64)]" os-version="10" platform="Windows" cwd="C:\Users\lsevereijns\Documents\nafigator" machine-name="AMD64" user="" user-domain="" culture="en_US" uiculture="en_US" os-architecture="64bit" /><failure><message><![CDATA[]]></message><stack-trace><![CDATA[]]></stack-trace></failure><reason><message><![CDATA[]]></message></reason><output><![CDATA[]]></output></test-case><test-case id="118" name="tests/test_nafdocument.py::TestNafDocument::test_add_term_element[span0-ext_refs0]" fullname="tests/test_nafdocument.py::TestNafDocument::test_add_term_element[span0-ext_refs0]" methodname="test_add_term_element[span0-ext_refs0]" classname="TestNafDocument" runstate="Runnable" seed="1" result="Failed" label="test added term element&#10;        input: etree._ElementTree + TermElement + str + boolean&#10;        level: 2&#10;        scenarios: test elements vs input" start-time="2023-03-16 13:28:40.020314" end-time="2023-03-16 13:28:40.021312" duration="0" asserts="0"><properties><property name="python-version" value="3.9.13 (main, Aug 25 2022, 23:51:50) [MSC v.1916 64 bit (AMD64)]" /><property name="fspath" value="tests/test_nafdocument.py" /></properties><environment framework-version="3.6.2" clr-version="3.9.13 (main, Aug 25 2022, 23:51:50) [MSC v.1916 64 bit (AMD64)]" os-version="10" platform="Windows" cwd="C:\Users\lsevereijns\Documents\nafigator" machine-name="AMD64" user="" user-domain="" culture="en_US" uiculture="en_US" os-architecture="64bit" /><failure><message><![CDATA[]]></message><stack-trace><![CDATA[]]></stack-trace></failure><reason><message><![CDATA[]]></message></reason><output><![CDATA[]]></output></test-case><test-case id="119" name="tests/test_nafdocument.py::TestNafDocument::test_add_term_element[span1-ext_refs1]" fullname="tests/test_nafdocument.py::TestNafDocument::test_add_term_element[span1-ext_refs1]" methodname="test_add_term_element[span1-ext_refs1]" classname="TestNafDocument" runstate="Runnable" seed="1" result="Failed" label="test added term element&#10;        input: etree._ElementTree + TermElement + str + boolean&#10;        level: 2&#10;        scenarios: test elements vs input" start-time="2023-03-16 13:28:40.120319" end-time="2023-03-16 13:28:40.121319" duration="0" asserts="0"><properties><property name="python-version" value="3.9.13 (main, Aug 25 2022, 23:51:50) [MSC v.1916 64 bit (AMD64)]" /><property name="fspath" value="tests/test_nafdocument.py" /></properties><environment framework-version="3.6.2" clr-version="3.9.13 (main, Aug 25 2022, 23:51:50) [MSC v.1916 64 bit (AMD64)]" os-version="10" platform="Windows" cwd="C:\Users\lsevereijns\Documents\nafigator" machine-name="AMD64" user="" user-domain="" culture="en_US" uiculture="en_US" os-architecture="64bit" /><failure><message><![CDATA[]]></message><stack-trace><![CDATA[]]></stack-trace></failure><reason><message><![CDATA[]]></message></reason><output><![CDATA[]]></output></test-case><test-case id="120" name="tests/test_nafdocument.py::TestNafDocument::test_add_chunk_element[span0]" fullname="tests/test_nafdocument.py::TestNafDocument::test_add_chunk_element[span0]" methodname="test_add_chunk_element[span0]" classname="TestNafDocument" runstate="Runnable" seed="1" result="Failed" label="test added chunk element&#10;        input: etree._ElementTree + ChunkElement + boolean&#10;        level: 2&#10;        scenarios: test elements vs input" start-time="2023-03-16 13:28:40.151322" end-time="2023-03-16 13:28:40.151322" duration="0" asserts="0"><properties><property name="python-version" value="3.9.13 (main, Aug 25 2022, 23:51:50) [MSC v.1916 64 bit (AMD64)]" /><property name="fspath" value="tests/test_nafdocument.py" /></properties><environment framework-version="3.6.2" clr-version="3.9.13 (main, Aug 25 2022, 23:51:50) [MSC v.1916 64 bit (AMD64)]" os-version="10" platform="Windows" cwd="C:\Users\lsevereijns\Documents\nafigator" machine-name="AMD64" user="" user-domain="" culture="en_US" uiculture="en_US" os-architecture="64bit" /><failure><message><![CDATA[]]></message><stack-trace><![CDATA[]]></stack-trace></failure><reason><message><![CDATA[]]></message></reason><output><![CDATA[]]></output></test-case><test-case id="121" name="tests/test_nafdocument.py::TestNafDocument::test_add_chunk_element[span1]" fullname="tests/test_nafdocument.py::TestNafDocument::test_add_chunk_element[span1]" methodname="test_add_chunk_element[span1]" classname="TestNafDocument" runstate="Runnable" seed="1" result="Failed" label="test added chunk element&#10;        input: etree._ElementTree + ChunkElement + boolean&#10;        level: 2&#10;        scenarios: test elements vs input" start-time="2023-03-16 13:28:40.181324" end-time="2023-03-16 13:28:40.182325" duration="0" asserts="0"><properties><property name="python-version" value="3.9.13 (main, Aug 25 2022, 23:51:50) [MSC v.1916 64 bit (AMD64)]" /><property name="fspath" value="tests/test_nafdocument.py" /></properties><environment framework-version="3.6.2" clr-version="3.9.13 (main, Aug 25 2022, 23:51:50) [MSC v.1916 64 bit (AMD64)]" os-version="10" platform="Windows" cwd="C:\Users\lsevereijns\Documents\nafigator" machine-name="AMD64" user="" user-domain="" culture="en_US" uiculture="en_US" os-architecture="64bit" /><failure><message><![CDATA[]]></message><stack-trace><![CDATA[]]></stack-trace></failure><reason><message><![CDATA[]]></message></reason><output><![CDATA[]]></output></test-case><test-case id="122" name="tests/test_nafdocument.py::TestNafDocument::test_add_span_element" fullname="tests/test_nafdocument.py::TestNafDocument::test_add_span_element" methodname="test_add_span_element" classname="TestNafDocument" runstate="Runnable" seed="1" result="Passed" label="test added span element&#10;        input: etree._ElementTree + tree._ElementTree(2) + dictlike OPTIONAL [comments-boolean, naf_version str]&#10;        level: 1&#10;        scenarios: test elements vs input" start-time="2023-03-16 13:28:40.182325" end-time="2023-03-16 13:28:40.183325" duration="0.001" asserts="0"><properties><property name="python-version" value="3.9.13 (main, Aug 25 2022, 23:51:50) [MSC v.1916 64 bit (AMD64)]" /><property name="fspath" value="tests/test_nafdocument.py" /></properties><environment framework-version="3.6.2" clr-version="3.9.13 (main, Aug 25 2022, 23:51:50) [MSC v.1916 64 bit (AMD64)]" os-version="10" platform="Windows" cwd="C:\Users\lsevereijns\Documents\nafigator" machine-name="AMD64" user="" user-domain="" culture="en_US" uiculture="en_US" os-architecture="64bit" /><failure><message><![CDATA[]]></message><stack-trace><![CDATA[None]]></stack-trace></failure><reason><message><![CDATA[]]></message></reason><output><![CDATA[]]></output></test-case><test-case id="123" name="tests/test_nafdocument.py::TestNafDocument::test_add_external_reference_element[ext_refs0]" fullname="tests/test_nafdocument.py::TestNafDocument::test_add_external_reference_element[ext_refs0]" methodname="test_add_external_reference_element[ext_refs0]" classname="TestNafDocument" runstate="Runnable" seed="1" result="Failed" label="test added external reference element&#10;        input: etree._ElementTree + tree._ElementTree(2) + list&#10;        level: 1&#10;        scenarios: test elements vs input" start-time="2023-03-16 13:28:40.211328" end-time="2023-03-16 13:28:40.212327" duration="0" asserts="0"><properties><property name="python-version" value="3.9.13 (main, Aug 25 2022, 23:51:50) [MSC v.1916 64 bit (AMD64)]" /><property name="fspath" value="tests/test_nafdocument.py" /></properties><environment framework-version="3.6.2" clr-version="3.9.13 (main, Aug 25 2022, 23:51:50) [MSC v.1916 64 bit (AMD64)]" os-version="10" platform="Windows" cwd="C:\Users\lsevereijns\Documents\nafigator" machine-name="AMD64" user="" user-domain="" culture="en_US" uiculture="en_US" os-architecture="64bit" /><failure><message><![CDATA[]]></message><stack-trace><![CDATA[]]></stack-trace></failure><reason><message><![CDATA[]]></message></reason><output><![CDATA[]]></output></test-case><test-case id="124" name="tests/test_nafdocument.py::TestNafDocument::test_add_external_reference_element[ext_refs1]" fullname="tests/test_nafdocument.py::TestNafDocument::test_add_external_reference_element[ext_refs1]" methodname="test_add_external_reference_element[ext_refs1]" classname="TestNafDocument" runstate="Runnable" seed="1" result="Failed" label="test added external reference element&#10;        input: etree._ElementTree + tree._ElementTree(2) + list&#10;        level: 1&#10;        scenarios: test elements vs input" start-time="2023-03-16 13:28:40.241329" end-time="2023-03-16 13:28:40.242330" duration="0" asserts="0"><properties><property name="python-version" value="3.9.13 (main, Aug 25 2022, 23:51:50) [MSC v.1916 64 bit (AMD64)]" /><property name="fspath" value="tests/test_nafdocument.py" /></properties><environment framework-version="3.6.2" clr-version="3.9.13 (main, Aug 25 2022, 23:51:50) [MSC v.1916 64 bit (AMD64)]" os-version="10" platform="Windows" cwd="C:\Users\lsevereijns\Documents\nafigator" machine-name="AMD64" user="" user-domain="" culture="en_US" uiculture="en_US" os-architecture="64bit" /><failure><message><![CDATA[]]></message><stack-trace><![CDATA[]]></stack-trace></failure><reason><message><![CDATA[]]></message></reason><output><![CDATA[]]></output></test-case><test-case id="125" name="tests/test_nafdocument.py::TestNafDocument::test_add_multiword_element[span0-components0-lemma0]" fullname="tests/test_nafdocument.py::TestNafDocument::test_add_multiword_element[span0-components0-lemma0]" methodname="test_add_multiword_element[span0-components0-lemma0]" classname="TestNafDocument" runstate="Runnable" seed="1" result="Failed" label="test added multiword element&#10;        input: etree._ElementTree + MultiwordElement&#10;        level: 1&#10;        scenarios: test elements vs input" start-time="2023-03-16 13:28:40.271336" end-time="2023-03-16 13:28:40.272332" duration="0" asserts="0"><properties><property name="python-version" value="3.9.13 (main, Aug 25 2022, 23:51:50) [MSC v.1916 64 bit (AMD64)]" /><property name="fspath" value="tests/test_nafdocument.py" /></properties><environment framework-version="3.6.2" clr-version="3.9.13 (main, Aug 25 2022, 23:51:50) [MSC v.1916 64 bit (AMD64)]" os-version="10" platform="Windows" cwd="C:\Users\lsevereijns\Documents\nafigator" machine-name="AMD64" user="" user-domain="" culture="en_US" uiculture="en_US" os-architecture="64bit" /><failure><message><![CDATA[]]></message><stack-trace><![CDATA[]]></stack-trace></failure><reason><message><![CDATA[]]></message></reason><output><![CDATA[]]></output></test-case><test-case id="126" name="tests/test_nafdocument.py::TestNafDocument::test_add_multiword_element[span1-components1-lemma1]" fullname="tests/test_nafdocument.py::TestNafDocument::test_add_multiword_element[span1-components1-lemma1]" methodname="test_add_multiword_element[span1-components1-lemma1]" classname="TestNafDocument" runstate="Runnable" seed="1" result="Failed" label="test added multiword element&#10;        input: etree._ElementTree + MultiwordElement&#10;        level: 1&#10;        scenarios: test elements vs input" start-time="2023-03-16 13:28:40.372340" end-time="2023-03-16 13:28:40.373341" duration="0" asserts="0"><properties><property name="python-version" value="3.9.13 (main, Aug 25 2022, 23:51:50) [MSC v.1916 64 bit (AMD64)]" /><property name="fspath" value="tests/test_nafdocument.py" /></properties><environment framework-version="3.6.2" clr-version="3.9.13 (main, Aug 25 2022, 23:51:50) [MSC v.1916 64 bit (AMD64)]" os-version="10" platform="Windows" cwd="C:\Users\lsevereijns\Documents\nafigator" machine-name="AMD64" user="" user-domain="" culture="en_US" uiculture="en_US" os-architecture="64bit" /><failure><message><![CDATA[]]></message><stack-trace><![CDATA[]]></stack-trace></failure><reason><message><![CDATA[]]></message></reason><output><![CDATA[]]></output></test-case><test-case id="127" name="tests/test_nafdocument.py::TestNafDocument::test_add_formats_copy_element" fullname="tests/test_nafdocument.py::TestNafDocument::test_add_formats_copy_element" methodname="test_add_formats_copy_element" classname="TestNafDocument" runstate="Runnable" seed="1" result="Passed" label="test added formats copy element&#10;        input: etree._ElementTree + src str + formats str&#10;        level: 0&#10;        scenarios: test elements vs input" start-time="2023-03-16 13:28:40.373341" end-time="2023-03-16 13:28:40.374341" duration="0.001" asserts="0"><properties><property name="python-version" value="3.9.13 (main, Aug 25 2022, 23:51:50) [MSC v.1916 64 bit (AMD64)]" /><property name="fspath" value="tests/test_nafdocument.py" /></properties><environment framework-version="3.6.2" clr-version="3.9.13 (main, Aug 25 2022, 23:51:50) [MSC v.1916 64 bit (AMD64)]" os-version="10" platform="Windows" cwd="C:\Users\lsevereijns\Documents\nafigator" machine-name="AMD64" user="" user-domain="" culture="en_US" uiculture="en_US" os-architecture="64bit" /><failure><message><![CDATA[]]></message><stack-trace><![CDATA[None]]></stack-trace></failure><reason><message><![CDATA[]]></message></reason><output><![CDATA[]]></output></test-case><test-case id="128" name="tests/test_nafdocument.py::TestNafDocument::test_add_formats_element" fullname="tests/test_nafdocument.py::TestNafDocument::test_add_formats_element" methodname="test_add_formats_element" classname="TestNafDocument" runstate="Runnable" seed="1" result="Passed" label="test added formats element&#10;        input: etree._ElementTree + src str + formats str + bool Optional: [camelot.core.TableList]&#10;        level: 1&#10;        scenarios: test elements vs input" start-time="2023-03-16 13:28:40.375341" end-time="2023-03-16 13:28:40.375341" duration="0.0" asserts="0"><properties><property name="python-version" value="3.9.13 (main, Aug 25 2022, 23:51:50) [MSC v.1916 64 bit (AMD64)]" /><property name="fspath" value="tests/test_nafdocument.py" /></properties><environment framework-version="3.6.2" clr-version="3.9.13 (main, Aug 25 2022, 23:51:50) [MSC v.1916 64 bit (AMD64)]" os-version="10" platform="Windows" cwd="C:\Users\lsevereijns\Documents\nafigator" machine-name="AMD64" user="" user-domain="" culture="en_US" uiculture="en_US" os-architecture="64bit" /><failure><message><![CDATA[]]></message><stack-trace><![CDATA[None]]></stack-trace></failure><reason><message><![CDATA[]]></message></reason><output><![CDATA[]]></output></test-case><environment framework-version="3.6.2" clr-version="3.9.13 (main, Aug 25 2022, 23:51:50) [MSC v.1916 64 bit (AMD64)]" os-version="10" platform="Windows" cwd="C:\Users\lsevereijns\Documents\nafigator" machine-name="AMD64" user="" user-domain="" culture="en_US" uiculture="en_US" os-architecture="64bit" /></test-suite><test-suite id="tests/test_parse2naf.py::TestParse2naf" name="tests/test_parse2naf.py::TestParse2naf" fullname="tests/test_parse2naf.py::TestParse2naf" methodname="" classname="" runstate="Runnable" type="Assembly" testcasecount="19" result="Passed" label="The basic class that inherits unittest.TestCase" start-time="2023-03-16 13:28:41.251236" end-time="2023-03-16 13:28:41.274238" duration="0.023002" asserts="0" total="19" passed="19" failed="0" warnings="0" inconclusive="0" skipped="0"><properties><property name="python_version" value="3.9.13 (main, Aug 25 2022, 23:51:50) [MSC v.1916 64 bit (AMD64)]" /></properties><test-case id="148" name="tests/test_parse2naf.py::TestParse2naf::test_add_chunks_layer" fullname="tests/test_parse2naf.py::TestParse2naf::test_add_chunks_layer" methodname="test_add_chunks_layer" classname="TestParse2naf" runstate="Runnable" seed="1" result="Passed" label="test if output chunks layer = correct&#10;        input: dict&#10;        level: 1&#10;        scenarios: check chunks layer vs chunks" start-time="2023-03-16 13:28:41.251236" end-time="2023-03-16 13:28:41.252239" duration="0.001003" asserts="0"><properties><property name="python-version" value="3.9.13 (main, Aug 25 2022, 23:51:50) [MSC v.1916 64 bit (AMD64)]" /><property name="fspath" value="tests/test_parse2naf.py" /></properties><environment framework-version="3.6.2" clr-version="3.9.13 (main, Aug 25 2022, 23:51:50) [MSC v.1916 64 bit (AMD64)]" os-version="10" platform="Windows" cwd="C:\Users\lsevereijns\Documents\nafigator" machine-name="AMD64" user="" user-domain="" culture="en_US" uiculture="en_US" os-architecture="64bit" /><failure><message><![CDATA[]]></message><stack-trace><![CDATA[None]]></stack-trace></failure><reason><message><![CDATA[]]></message></reason><output><![CDATA[]]></output></test-case><test-case id="149" name="tests/test_parse2naf.py::TestParse2naf::test_add_deps_layer" fullname="tests/test_parse2naf.py::TestParse2naf::test_add_deps_layer" methodname="test_add_deps_layer" classname="TestParse2naf" runstate="Runnable" seed="1" result="Passed" label="test if output deps layer = correct&#10;        input: dict&#10;        level: 1&#10;        scenarios: check dependencies layer vs dependencies" start-time="2023-03-16 13:28:41.252239" end-time="2023-03-16 13:28:41.253239" duration="0.001" asserts="0"><properties><property name="python-version" value="3.9.13 (main, Aug 25 2022, 23:51:50) [MSC v.1916 64 bit (AMD64)]" /><property name="fspath" value="tests/test_parse2naf.py" /></properties><environment framework-version="3.6.2" clr-version="3.9.13 (main, Aug 25 2022, 23:51:50) [MSC v.1916 64 bit (AMD64)]" os-version="10" platform="Windows" cwd="C:\Users\lsevereijns\Documents\nafigator" machine-name="AMD64" user="" user-domain="" culture="en_US" uiculture="en_US" os-architecture="64bit" /><failure><message><![CDATA[]]></message><stack-trace><![CDATA[None]]></stack-trace></failure><reason><message><![CDATA[]]></message></reason><output><![CDATA[]]></output></test-case><test-case id="150" name="tests/test_parse2naf.py::TestParse2naf::test_add_entities_layer" fullname="tests/test_parse2naf.py::TestParse2naf::test_add_entities_layer" methodname="test_add_entities_layer" classname="TestParse2naf" runstate="Runnable" seed="1" result="Passed" label="test if output entities layer = correct&#10;        input: dict&#10;        level: 1&#10;        scenarios: check entities for multiple input" start-time="2023-03-16 13:28:41.253239" end-time="2023-03-16 13:28:41.254237" duration="0.000998" asserts="0"><properties><property name="python-version" value="3.9.13 (main, Aug 25 2022, 23:51:50) [MSC v.1916 64 bit (AMD64)]" /><property name="fspath" value="tests/test_parse2naf.py" /></properties><environment framework-version="3.6.2" clr-version="3.9.13 (main, Aug 25 2022, 23:51:50) [MSC v.1916 64 bit (AMD64)]" os-version="10" platform="Windows" cwd="C:\Users\lsevereijns\Documents\nafigator" machine-name="AMD64" user="" user-domain="" culture="en_US" uiculture="en_US" os-architecture="64bit" /><failure><message><![CDATA[]]></message><stack-trace><![CDATA[None]]></stack-trace></failure><reason><message><![CDATA[]]></message></reason><output><![CDATA[]]></output></test-case><test-case id="151" name="tests/test_parse2naf.py::TestParse2naf::test_add_formats_layer" fullname="tests/test_parse2naf.py::TestParse2naf::test_add_formats_layer" methodname="test_add_formats_layer" classname="TestParse2naf" runstate="Runnable" seed="1" result="Passed" label="test if output formats layer = correct&#10;        input: dict&#10;        level: 1&#10;        scenarios: check format elements layer vs format elements" start-time="2023-03-16 13:28:41.254237" end-time="2023-03-16 13:28:41.255237" duration="0.001" asserts="0"><properties><property name="python-version" value="3.9.13 (main, Aug 25 2022, 23:51:50) [MSC v.1916 64 bit (AMD64)]" /><property name="fspath" value="tests/test_parse2naf.py" /></properties><environment framework-version="3.6.2" clr-version="3.9.13 (main, Aug 25 2022, 23:51:50) [MSC v.1916 64 bit (AMD64)]" os-version="10" platform="Windows" cwd="C:\Users\lsevereijns\Documents\nafigator" machine-name="AMD64" user="" user-domain="" culture="en_US" uiculture="en_US" os-architecture="64bit" /><failure><message><![CDATA[]]></message><stack-trace><![CDATA[None]]></stack-trace></failure><reason><message><![CDATA[]]></message></reason><output><![CDATA[]]></output></test-case><test-case id="152" name="tests/test_parse2naf.py::TestParse2naf::test_add_multiwords_layer" fullname="tests/test_parse2naf.py::TestParse2naf::test_add_multiwords_layer" methodname="test_add_multiwords_layer" classname="TestParse2naf" runstate="Runnable" seed="1" result="Passed" label="test multiword output data&#10;        input: dict&#10;        level: 1&#10;        scenarios: check multiword layer vs multiword" start-time="2023-03-16 13:28:41.256237" end-time="2023-03-16 13:28:41.256237" duration="0.0" asserts="0"><properties><property name="python-version" value="3.9.13 (main, Aug 25 2022, 23:51:50) [MSC v.1916 64 bit (AMD64)]" /><property name="fspath" value="tests/test_parse2naf.py" /></properties><environment framework-version="3.6.2" clr-version="3.9.13 (main, Aug 25 2022, 23:51:50) [MSC v.1916 64 bit (AMD64)]" os-version="10" platform="Windows" cwd="C:\Users\lsevereijns\Documents\nafigator" machine-name="AMD64" user="" user-domain="" culture="en_US" uiculture="en_US" os-architecture="64bit" /><failure><message><![CDATA[]]></message><stack-trace><![CDATA[None]]></stack-trace></failure><reason><message><![CDATA[]]></message></reason><output><![CDATA[]]></output></test-case><test-case id="153" name="tests/test_parse2naf.py::TestParse2naf::test_add_terms_layer" fullname="tests/test_parse2naf.py::TestParse2naf::test_add_terms_layer" methodname="test_add_terms_layer" classname="TestParse2naf" runstate="Runnable" seed="1" result="Passed" label="test if output terms layer = correct&#10;        input: dict&#10;        level: 1&#10;        scenarios: check terms layer vs terms" start-time="2023-03-16 13:28:41.257237" end-time="2023-03-16 13:28:41.257237" duration="0.0" asserts="0"><properties><property name="python-version" value="3.9.13 (main, Aug 25 2022, 23:51:50) [MSC v.1916 64 bit (AMD64)]" /><property name="fspath" value="tests/test_parse2naf.py" /></properties><environment framework-version="3.6.2" clr-version="3.9.13 (main, Aug 25 2022, 23:51:50) [MSC v.1916 64 bit (AMD64)]" os-version="10" platform="Windows" cwd="C:\Users\lsevereijns\Documents\nafigator" machine-name="AMD64" user="" user-domain="" culture="en_US" uiculture="en_US" os-architecture="64bit" /><failure><message><![CDATA[]]></message><stack-trace><![CDATA[None]]></stack-trace></failure><reason><message><![CDATA[]]></message></reason><output><![CDATA[]]></output></test-case><test-case id="154" name="tests/test_parse2naf.py::TestParse2naf::test_add_text_layer" fullname="tests/test_parse2naf.py::TestParse2naf::test_add_text_layer" methodname="test_add_text_layer" classname="TestParse2naf" runstate="Runnable" seed="1" result="Passed" label="test if output text layer = correct&#10;        input: dict&#10;        level: 1&#10;        scenarios: check text layer vs text" start-time="2023-03-16 13:28:41.258237" end-time="2023-03-16 13:28:41.258237" duration="0.0" asserts="0"><properties><property name="python-version" value="3.9.13 (main, Aug 25 2022, 23:51:50) [MSC v.1916 64 bit (AMD64)]" /><property name="fspath" value="tests/test_parse2naf.py" /></properties><environment framework-version="3.6.2" clr-version="3.9.13 (main, Aug 25 2022, 23:51:50) [MSC v.1916 64 bit (AMD64)]" os-version="10" platform="Windows" cwd="C:\Users\lsevereijns\Documents\nafigator" machine-name="AMD64" user="" user-domain="" culture="en_US" uiculture="en_US" os-architecture="64bit" /><failure><message><![CDATA[]]></message><stack-trace><![CDATA[None]]></stack-trace></failure><reason><message><![CDATA[]]></message></reason><output><![CDATA[]]></output></test-case><test-case id="155" name="tests/test_parse2naf.py::TestParse2naf::test_chunk_tuples_for_doc" fullname="tests/test_parse2naf.py::TestParse2naf::test_chunk_tuples_for_doc" methodname="test_chunk_tuples_for_doc" classname="TestParse2naf" runstate="Runnable" seed="1" result="Passed" label="test chunk element on ...?&#10;        input: str, dict&#10;        level: 0&#10;        scenarios: check tuples for multiple input" start-time="2023-03-16 13:28:41.259239" end-time="2023-03-16 13:28:41.260237" duration="0.000998" asserts="0"><properties><property name="python-version" value="3.9.13 (main, Aug 25 2022, 23:51:50) [MSC v.1916 64 bit (AMD64)]" /><property name="fspath" value="tests/test_parse2naf.py" /></properties><environment framework-version="3.6.2" clr-version="3.9.13 (main, Aug 25 2022, 23:51:50) [MSC v.1916 64 bit (AMD64)]" os-version="10" platform="Windows" cwd="C:\Users\lsevereijns\Documents\nafigator" machine-name="AMD64" user="" user-domain="" culture="en_US" uiculture="en_US" os-architecture="64bit" /><failure><message><![CDATA[]]></message><stack-trace><![CDATA[None]]></stack-trace></failure><reason><message><![CDATA[]]></message></reason><output><![CDATA[]]></output></test-case><test-case id="156" name="tests/test_parse2naf.py::TestParse2naf::test_chunks_for_doc" fullname="tests/test_parse2naf.py::TestParse2naf::test_chunks_for_doc" methodname="test_chunks_for_doc" classname="TestParse2naf" runstate="Runnable" seed="1" result="Passed" label="test if span is right&#10;        input: str, dict&#10;        level: 0&#10;        scenarios:  check chunks for ADP&#10;                    check chunks for not ADP" start-time="2023-03-16 13:28:41.261241" end-time="2023-03-16 13:28:41.262241" duration="0.001" asserts="0"><properties><property name="python-version" value="3.9.13 (main, Aug 25 2022, 23:51:50) [MSC v.1916 64 bit (AMD64)]" /><property name="fspath" value="tests/test_parse2naf.py" /></properties><environment framework-version="3.6.2" clr-version="3.9.13 (main, Aug 25 2022, 23:51:50) [MSC v.1916 64 bit (AMD64)]" os-version="10" platform="Windows" cwd="C:\Users\lsevereijns\Documents\nafigator" machine-name="AMD64" user="" user-domain="" culture="en_US" uiculture="en_US" os-architecture="64bit" /><failure><message><![CDATA[]]></message><stack-trace><![CDATA[None]]></stack-trace></failure><reason><message><![CDATA[]]></message></reason><output><![CDATA[]]></output></test-case><test-case id="157" name="tests/test_parse2naf.py::TestParse2naf::test_create_params" fullname="tests/test_parse2naf.py::TestParse2naf::test_create_params" methodname="test_create_params" classname="TestParse2naf" runstate="Runnable" seed="1" result="Passed" label="This function tests whether the input params are updated&#10;        input:  str, str, str, str, bool, params dict, any&#10;        level: 0&#10;        scenarios: input = nafdocument or something else" start-time="2023-03-16 13:28:41.262241" end-time="2023-03-16 13:28:41.263239" duration="0.000998" asserts="0"><properties><property name="python-version" value="3.9.13 (main, Aug 25 2022, 23:51:50) [MSC v.1916 64 bit (AMD64)]" /><property name="fspath" value="tests/test_parse2naf.py" /></properties><environment framework-version="3.6.2" clr-version="3.9.13 (main, Aug 25 2022, 23:51:50) [MSC v.1916 64 bit (AMD64)]" os-version="10" platform="Windows" cwd="C:\Users\lsevereijns\Documents\nafigator" machine-name="AMD64" user="" user-domain="" culture="en_US" uiculture="en_US" os-architecture="64bit" /><failure><message><![CDATA[]]></message><stack-trace><![CDATA[None]]></stack-trace></failure><reason><message><![CDATA[]]></message></reason><output><![CDATA[]]></output></test-case><test-case id="158" name="tests/test_parse2naf.py::TestParse2naf::test_dependencies_to_add" fullname="tests/test_parse2naf.py::TestParse2naf::test_dependencies_to_add" methodname="test_dependencies_to_add" classname="TestParse2naf" runstate="Runnable" seed="1" result="Passed" label="test output on dependencies that are added&#10;        input: str, str, int, dict&#10;        level: 0&#10;        scenarios: check dependency list for multiple input" start-time="2023-03-16 13:28:41.264237" end-time="2023-03-16 13:28:41.264237" duration="0.0" asserts="0"><properties><property name="python-version" value="3.9.13 (main, Aug 25 2022, 23:51:50) [MSC v.1916 64 bit (AMD64)]" /><property name="fspath" value="tests/test_parse2naf.py" /></properties><environment framework-version="3.6.2" clr-version="3.9.13 (main, Aug 25 2022, 23:51:50) [MSC v.1916 64 bit (AMD64)]" os-version="10" platform="Windows" cwd="C:\Users\lsevereijns\Documents\nafigator" machine-name="AMD64" user="" user-domain="" culture="en_US" uiculture="en_US" os-architecture="64bit" /><failure><message><![CDATA[]]></message><stack-trace><![CDATA[None]]></stack-trace></failure><reason><message><![CDATA[]]></message></reason><output><![CDATA[]]></output></test-case><test-case id="159" name="tests/test_parse2naf.py::TestParse2naf::test_derive_text_from_formats_layer" fullname="tests/test_parse2naf.py::TestParse2naf::test_derive_text_from_formats_layer" methodname="test_derive_text_from_formats_layer" classname="TestParse2naf" runstate="Runnable" seed="1" result="Passed" label="test for expected text return&#10;        input: dict&#10;        level: 0&#10;        scenarios:  check text with formats&#10;                    check text without formats&#10;                    check for different spaces" start-time="2023-03-16 13:28:41.265240" end-time="2023-03-16 13:28:41.266239" duration="0.000999" asserts="0"><properties><property name="python-version" value="3.9.13 (main, Aug 25 2022, 23:51:50) [MSC v.1916 64 bit (AMD64)]" /><property name="fspath" value="tests/test_parse2naf.py" /></properties><environment framework-version="3.6.2" clr-version="3.9.13 (main, Aug 25 2022, 23:51:50) [MSC v.1916 64 bit (AMD64)]" os-version="10" platform="Windows" cwd="C:\Users\lsevereijns\Documents\nafigator" machine-name="AMD64" user="" user-domain="" culture="en_US" uiculture="en_US" os-architecture="64bit" /><failure><message><![CDATA[]]></message><stack-trace><![CDATA[None]]></stack-trace></failure><reason><message><![CDATA[]]></message></reason><output><![CDATA[]]></output></test-case><test-case id="160" name="tests/test_parse2naf.py::TestParse2naf::test_entities_generator" fullname="tests/test_parse2naf.py::TestParse2naf::test_entities_generator" methodname="test_entities_generator" classname="TestParse2naf" runstate="Runnable" seed="1" result="Passed" label="tests if start and end are right&#10;        input: str, dict&#10;        level: 0&#10;        scenarios: check entities for multiple input" start-time="2023-03-16 13:28:41.266239" end-time="2023-03-16 13:28:41.267239" duration="0.001" asserts="0"><properties><property name="python-version" value="3.9.13 (main, Aug 25 2022, 23:51:50) [MSC v.1916 64 bit (AMD64)]" /><property name="fspath" value="tests/test_parse2naf.py" /></properties><environment framework-version="3.6.2" clr-version="3.9.13 (main, Aug 25 2022, 23:51:50) [MSC v.1916 64 bit (AMD64)]" os-version="10" platform="Windows" cwd="C:\Users\lsevereijns\Documents\nafigator" machine-name="AMD64" user="" user-domain="" culture="en_US" uiculture="en_US" os-architecture="64bit" /><failure><message><![CDATA[]]></message><stack-trace><![CDATA[None]]></stack-trace></failure><reason><message><![CDATA[]]></message></reason><output><![CDATA[]]></output></test-case><test-case id="161" name="tests/test_parse2naf.py::TestParse2naf::test_evaluate_naf" fullname="tests/test_parse2naf.py::TestParse2naf::test_evaluate_naf" methodname="test_evaluate_naf" classname="TestParse2naf" runstate="Runnable" seed="1" result="Passed" label="This function tests whether the expected logging errors occur&#10;        input: dict&#10;        level: 1&#10;        scenarios: check all logging" start-time="2023-03-16 13:28:41.268240" end-time="2023-03-16 13:28:41.268240" duration="0.0" asserts="0"><properties><property name="python-version" value="3.9.13 (main, Aug 25 2022, 23:51:50) [MSC v.1916 64 bit (AMD64)]" /><property name="fspath" value="tests/test_parse2naf.py" /></properties><environment framework-version="3.6.2" clr-version="3.9.13 (main, Aug 25 2022, 23:51:50) [MSC v.1916 64 bit (AMD64)]" os-version="10" platform="Windows" cwd="C:\Users\lsevereijns\Documents\nafigator" machine-name="AMD64" user="" user-domain="" culture="en_US" uiculture="en_US" os-architecture="64bit" /><failure><message><![CDATA[]]></message><stack-trace><![CDATA[None]]></stack-trace></failure><reason><message><![CDATA[]]></message></reason><output><![CDATA[]]></output></test-case><test-case id="162" name="tests/test_parse2naf.py::TestParse2naf::test_get_next_mw_id" fullname="tests/test_parse2naf.py::TestParse2naf::test_get_next_mw_id" methodname="test_get_next_mw_id" classname="TestParse2naf" runstate="Runnable" seed="1" result="Passed" label="test multiword id output&#10;        input: dict&#10;        level: 0&#10;        scenarios: check ids for multiple input" start-time="2023-03-16 13:28:41.269237" end-time="2023-03-16 13:28:41.270237" duration="0.001" asserts="0"><properties><property name="python-version" value="3.9.13 (main, Aug 25 2022, 23:51:50) [MSC v.1916 64 bit (AMD64)]" /><property name="fspath" value="tests/test_parse2naf.py" /></properties><environment framework-version="3.6.2" clr-version="3.9.13 (main, Aug 25 2022, 23:51:50) [MSC v.1916 64 bit (AMD64)]" os-version="10" platform="Windows" cwd="C:\Users\lsevereijns\Documents\nafigator" machine-name="AMD64" user="" user-domain="" culture="en_US" uiculture="en_US" os-architecture="64bit" /><failure><message><![CDATA[]]></message><stack-trace><![CDATA[None]]></stack-trace></failure><reason><message><![CDATA[]]></message></reason><output><![CDATA[]]></output></test-case><test-case id="163" name="tests/test_parse2naf.py::TestParse2naf::test_process_linguistic_layers" fullname="tests/test_parse2naf.py::TestParse2naf::test_process_linguistic_layers" methodname="test_process_linguistic_layers" classname="TestParse2naf" runstate="Runnable" seed="1" result="Passed" label="test for multiple layers add&#10;        input: dict&#10;        level: 1&#10;        scenarios: check output preprocess layer" start-time="2023-03-16 13:28:41.270237" end-time="2023-03-16 13:28:41.271238" duration="0.001001" asserts="0"><properties><property name="python-version" value="3.9.13 (main, Aug 25 2022, 23:51:50) [MSC v.1916 64 bit (AMD64)]" /><property name="fspath" value="tests/test_parse2naf.py" /></properties><environment framework-version="3.6.2" clr-version="3.9.13 (main, Aug 25 2022, 23:51:50) [MSC v.1916 64 bit (AMD64)]" os-version="10" platform="Windows" cwd="C:\Users\lsevereijns\Documents\nafigator" machine-name="AMD64" user="" user-domain="" culture="en_US" uiculture="en_US" os-architecture="64bit" /><failure><message><![CDATA[]]></message><stack-trace><![CDATA[None]]></stack-trace></failure><reason><message><![CDATA[]]></message></reason><output><![CDATA[]]></output></test-case><test-case id="164" name="tests/test_parse2naf.py::TestParse2naf::test_process_linguistic_steps" fullname="tests/test_parse2naf.py::TestParse2naf::test_process_linguistic_steps" methodname="test_process_linguistic_steps" classname="TestParse2naf" runstate="Runnable" seed="1" result="Passed" label="test for multiple language input&#10;        input: dict&#10;        level: 1&#10;        scenarios: check language and engine" start-time="2023-03-16 13:28:41.271238" end-time="2023-03-16 13:28:41.272237" duration="0.000999" asserts="0"><properties><property name="python-version" value="3.9.13 (main, Aug 25 2022, 23:51:50) [MSC v.1916 64 bit (AMD64)]" /><property name="fspath" value="tests/test_parse2naf.py" /></properties><environment framework-version="3.6.2" clr-version="3.9.13 (main, Aug 25 2022, 23:51:50) [MSC v.1916 64 bit (AMD64)]" os-version="10" platform="Windows" cwd="C:\Users\lsevereijns\Documents\nafigator" machine-name="AMD64" user="" user-domain="" culture="en_US" uiculture="en_US" os-architecture="64bit" /><failure><message><![CDATA[]]></message><stack-trace><![CDATA[None]]></stack-trace></failure><reason><message><![CDATA[]]></message></reason><output><![CDATA[]]></output></test-case><test-case id="165" name="tests/test_parse2naf.py::TestParse2naf::test_process_preprocess_steps" fullname="tests/test_parse2naf.py::TestParse2naf::test_process_preprocess_steps" methodname="test_process_preprocess_steps" classname="TestParse2naf" runstate="Runnable" seed="1" result="Passed" label="tests whether the input is encoded correctly and&#10;        tests if the right conversion of input document is used&#10;        input: dict&#10;        level: 1 (imports from preprocessor)&#10;        scenarios: check generated text" start-time="2023-03-16 13:28:41.272237" end-time="2023-03-16 13:28:41.273238" duration="0.001001" asserts="0"><properties><property name="python-version" value="3.9.13 (main, Aug 25 2022, 23:51:50) [MSC v.1916 64 bit (AMD64)]" /><property name="fspath" value="tests/test_parse2naf.py" /></properties><environment framework-version="3.6.2" clr-version="3.9.13 (main, Aug 25 2022, 23:51:50) [MSC v.1916 64 bit (AMD64)]" os-version="10" platform="Windows" cwd="C:\Users\lsevereijns\Documents\nafigator" machine-name="AMD64" user="" user-domain="" culture="en_US" uiculture="en_US" os-architecture="64bit" /><failure><message><![CDATA[]]></message><stack-trace><![CDATA[None]]></stack-trace></failure><reason><message><![CDATA[]]></message></reason><output><![CDATA[]]></output></test-case><test-case id="166" name="tests/test_parse2naf.py::TestParse2naf::test_raw_layer" fullname="tests/test_parse2naf.py::TestParse2naf::test_raw_layer" methodname="test_raw_layer" classname="TestParse2naf" runstate="Runnable" seed="1" result="Passed" label="test multiword output data&#10;        input: dict&#10;        level: 1&#10;        scenarios: check multiword layer vs multiword" start-time="2023-03-16 13:28:41.273238" end-time="2023-03-16 13:28:41.274238" duration="0.001" asserts="0"><properties><property name="python-version" value="3.9.13 (main, Aug 25 2022, 23:51:50) [MSC v.1916 64 bit (AMD64)]" /><property name="fspath" value="tests/test_parse2naf.py" /></properties><environment framework-version="3.6.2" clr-version="3.9.13 (main, Aug 25 2022, 23:51:50) [MSC v.1916 64 bit (AMD64)]" os-version="10" platform="Windows" cwd="C:\Users\lsevereijns\Documents\nafigator" machine-name="AMD64" user="" user-domain="" culture="en_US" uiculture="en_US" os-architecture="64bit" /><failure><message><![CDATA[]]></message><stack-trace><![CDATA[None]]></stack-trace></failure><reason><message><![CDATA[]]></message></reason><output><![CDATA[]]></output></test-case><environment framework-version="3.6.2" clr-version="3.9.13 (main, Aug 25 2022, 23:51:50) [MSC v.1916 64 bit (AMD64)]" os-version="10" platform="Windows" cwd="C:\Users\lsevereijns\Documents\nafigator" machine-name="AMD64" user="" user-domain="" culture="en_US" uiculture="en_US" os-architecture="64bit" /></test-suite></test-run>