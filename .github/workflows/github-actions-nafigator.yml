name: Python package

on:
  pull_request:
    branches: [dev, main]
  workflow_dispatch:

jobs:
  build:
    runs-on: ${{ matrix.os }}
    strategy:
      matrix:
        os: [ubuntu-latest]
        python-version: ["3.8", "3.9"]

    steps:
      - uses: actions/checkout@v3
      - name: Set up Python ${{ matrix.python-version }}
        uses: actions/setup-python@v4
        with:
          python-version: ${{ matrix.python-version }}

      - name: Install dependencies
        run: |
          python -m pip install --upgrade pip
          pip install -r requirement-dev.txt
          pip install -r requirements.txt
      
      - name: Install stanza models
        run: |
          python install_models.py 

      - name: Test with pytest
        run: |
          pytest tests/ --doctest-modules --junitxml=junit/test-results.xml --cov=com --cov-report=xml --cov-report=html

  deployment:
    env:
      pypi_login: ${{ secrets.PYPI_LOGIN }}
      pypi_password: ${{ secrets.PYPI_PASSWORD }}

    if: github.ref == 'refs/heads/main'
    needs: build

    runs-on: ${{ matrix.os }}
    strategy:
      matrix:
        os: [ubuntu-latest]
        python-version: ["3.9"]
        
    steps:
      - uses: actions/checkout@v3
      - name: Set up Python ${{ matrix.python-version }}
        uses: actions/setup-python@v4
        with:
          python-version: ${{ matrix.python-version }}
      
      - name: deploy
        run: |
          pip install -r requirement-dev.txt
          python setup.py bdist_wheel --universal
          twine upload --verbose dist/*.whl -u ${{ env.pypi_login }} -p ${{ env.pypi_password }}
